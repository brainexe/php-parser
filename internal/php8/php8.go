// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:2
package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:2

import (
	"strconv"

	"github.com/z7zmey/php-parser/pkg/ast"
	"github.com/z7zmey/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_MATCH = 57484
const T_ATTRIBUTE = 57485
const T_NULLSAFE_OBJECT_OPERATOR = 57486
const T_NAME_RELATIVE = 57487
const T_NAME_QUALIFIED = 57488
const T_NAME_FULLY_QUALIFIED = 57489

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_MATCH",
	"T_ATTRIBUTE",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_NAME_RELATIVE",
	"T_NAME_QUALIFIED",
	"T_NAME_FULLY_QUALIFIED",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:4470

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 44,
	58, 430,
	79, 430,
	150, 430,
	156, 430,
	-2, 425,
	-1, 48,
	154, 433,
	-2, 442,
	-1, 85,
	58, 432,
	79, 432,
	150, 432,
	154, 435,
	156, 432,
	-2, 420,
	-1, 109,
	79, 393,
	-2, 422,
	-1, 234,
	58, 430,
	79, 430,
	150, 430,
	156, 430,
	-2, 319,
	-1, 237,
	154, 435,
	-2, 432,
	-1, 240,
	58, 430,
	79, 430,
	150, 430,
	156, 430,
	-2, 321,
	-1, 356,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 343,
	-1, 357,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 344,
	-1, 358,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 345,
	-1, 359,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 346,
	-1, 360,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 347,
	-1, 361,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 348,
	-1, 362,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 349,
	-1, 363,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 350,
	-1, 364,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 351,
	-1, 371,
	155, 168,
	166, 168,
	-2, 430,
	-1, 416,
	155, 470,
	157, 470,
	166, 470,
	-2, 430,
	-1, 421,
	58, 431,
	79, 431,
	150, 431,
	154, 434,
	156, 431,
	-2, 353,
	-1, 435,
	154, 456,
	-2, 423,
	-1, 436,
	154, 458,
	-2, 448,
	-1, 517,
	154, 456,
	-2, 424,
	-1, 518,
	154, 458,
	-2, 449,
	-1, 535,
	155, 218,
	-2, 223,
	-1, 576,
	155, 218,
	-2, 223,
	-1, 601,
	154, 434,
	-2, 431,
	-1, 667,
	155, 188,
	-2, 430,
	-1, 675,
	155, 218,
	-2, 223,
	-1, 691,
	155, 469,
	157, 469,
	166, 469,
	-2, 430,
	-1, 728,
	155, 189,
	-2, 430,
	-1, 744,
	37, 273,
	39, 273,
	-2, 270,
	-1, 758,
	94, 213,
	95, 213,
	96, 213,
	-2, 0,
	-1, 787,
	155, 188,
	-2, 430,
	-1, 789,
	155, 191,
	-2, 404,
	-1, 804,
	94, 214,
	95, 214,
	96, 214,
	-2, 0,
	-1, 854,
	31, 204,
	32, 204,
	33, 204,
	151, 204,
	-2, 0,
	-1, 885,
	79, 86,
	-2, 78,
	-1, 890,
	31, 203,
	32, 203,
	33, 203,
	151, 203,
	-2, 0,
	-1, 918,
	155, 218,
	-2, 223,
}

const yyPrivate = 57344

const yyLast = 8145

var yyAct = [...]int{
	28, 133, 763, 629, 841, 864, 746, 440, 878, 840,
	583, 109, 783, 818, 837, 192, 633, 680, 129, 632,
	666, 648, 140, 140, 140, 710, 647, 154, 378, 570,
	631, 325, 539, 528, 721, 189, 578, 634, 370, 225,
	380, 408, 320, 520, 316, 9, 227, 5, 153, 81,
	146, 131, 319, 229, 233, 8, 85, 241, 242, 243,
	244, 245, 139, 135, 246, 247, 248, 249, 250, 251,
	252, 318, 255, 44, 7, 263, 264, 265, 317, 128,
	2, 6, 150, 519, 434, 143, 144, 259, 130, 874,
	278, 279, 269, 281, 282, 871, 848, 689, 274, 83,
	595, 552, 858, 336, 235, 235, 312, 845, 409, 844,
	107, 237, 237, 117, 124, 142, 896, 107, 872, 868,
	573, 682, 288, 682, 769, 714, 547, 897, 234, 240,
	107, 311, 873, 869, 337, 322, 334, 332, 327, 328,
	305, 310, 304, 704, 309, 641, 626, 107, 338, 182,
	335, 333, 324, 291, 293, 311, 305, 339, 340, 341,
	342, 343, 344, 345, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 361,
	362, 363, 364, 571, 366, 368, 271, 372, 562, 414,
	374, 168, 193, 865, 274, 706, 789, 698, 605, 298,
	608, 606, 694, 615, 238, 390, 392, 393, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 80,
	602, 405, 140, 407, 302, 229, 382, 308, 167, 169,
	170, 611, 417, 590, 428, 235, 612, 419, 413, 266,
	229, 929, 237, 892, 147, 386, 182, 826, 410, 825,
	115, 113, 114, 764, 816, 140, 805, 859, 793, 371,
	223, 736, 429, 108, 412, 726, 708, 140, 289, 703,
	108, 701, 435, 517, 693, 365, 373, 529, 530, 420,
	235, 531, 271, 108, 406, 664, 653, 237, 168, 643,
	536, 603, 142, 540, 107, 229, 594, 524, 295, 918,
	108, 833, 820, 819, 416, 791, 275, 729, 692, 142,
	675, 661, 235, 557, 662, 166, 165, 422, 525, 237,
	292, 576, 309, 560, 558, 167, 169, 170, 290, 433,
	164, 535, 427, 418, 542, 273, 431, 566, 387, 154,
	866, 9, 756, 5, 385, 424, 425, 294, 607, 280,
	277, 8, 222, 516, 276, 254, 182, 526, 221, 224,
	636, 637, 220, 556, 187, 186, 185, 138, 569, 137,
	7, 424, 134, 425, 425, 424, 116, 6, 544, 389,
	933, 238, 932, 924, 564, 550, 585, 567, 586, 523,
	191, 587, 588, 580, 907, 522, 584, 906, 168, 171,
	172, 891, 275, 778, 779, 549, 575, 778, 779, 855,
	827, 593, 582, 822, 815, 229, 597, 849, 565, 229,
	577, 158, 160, 159, 182, 166, 165, 115, 113, 114,
	297, 775, 296, 614, 814, 167, 169, 170, 617, 757,
	164, 725, 724, 411, 115, 113, 114, 108, 184, 181,
	722, 811, 592, 720, 717, 561, 546, 635, 600, 543,
	388, 596, 376, 331, 156, 157, 168, 171, 172, 173,
	174, 175, 176, 178, 180, 330, 743, 329, 616, 745,
	299, 806, 771, 613, 912, 820, 819, 436, 518, 142,
	862, 183, 162, 166, 165, 182, 218, 219, 861, 119,
	161, 142, 163, 167, 169, 170, 177, 179, 164, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 821, 140, 621, 423, 777, 807, 796, 792,
	750, 751, 752, 749, 748, 747, 738, 168, 171, 172,
	636, 637, 642, 712, 178, 180, 260, 638, 681, 651,
	645, 426, 581, 147, 168, 553, 188, 625, 77, 204,
	618, 657, 327, 659, 166, 165, 622, 624, 640, 663,
	309, 119, 649, 182, 167, 169, 170, 177, 179, 164,
	676, 119, 886, 119, 149, 620, 652, 9, 638, 5,
	679, 584, 123, 658, 767, 743, 690, 8, 745, 258,
	201, 203, 202, 119, 655, 199, 200, 678, 307, 307,
	665, 261, 262, 696, 677, 168, 7, 910, 672, 194,
	521, 235, 235, 6, 115, 113, 114, 529, 237, 237,
	126, 307, 127, 268, 686, 120, 115, 113, 114, 118,
	847, 307, 540, 267, 551, 371, 667, 638, 235, 750,
	751, 752, 749, 748, 747, 237, 303, 119, 718, 727,
	702, 700, 646, 555, 711, 579, 78, 79, 908, 715,
	649, 229, 691, 707, 709, 731, 125, 713, 716, 735,
	381, 384, 534, 795, 126, 548, 127, 638, 46, 758,
	759, 733, 734, 229, 754, 306, 800, 723, 799, 753,
	149, 867, 136, 106, 285, 286, 737, 120, 260, 743,
	730, 909, 745, 426, 307, 301, 638, 120, 235, 120,
	323, 327, 695, 838, 151, 237, 898, 195, 755, 762,
	229, 711, 760, 649, 810, 765, 772, 151, 770, 120,
	768, 619, 728, 609, 411, 623, 773, 260, 786, 136,
	106, 802, 776, 638, 801, 584, 797, 780, 804, 782,
	132, 798, 554, 750, 751, 752, 749, 748, 747, 788,
	260, 784, 533, 261, 262, 283, 638, 235, 650, 817,
	379, 809, 377, 198, 237, 197, 743, 824, 812, 745,
	196, 122, 808, 120, 830, 190, 831, 832, 1, 38,
	813, 787, 744, 829, 750, 751, 752, 749, 748, 747,
	741, 532, 261, 262, 834, 835, 842, 823, 778, 779,
	854, 742, 260, 877, 674, 846, 256, 426, 260, 794,
	260, 853, 260, 287, 284, 261, 262, 257, 857, 383,
	750, 751, 752, 749, 748, 747, 369, 875, 887, 888,
	884, 654, 850, 931, 889, 890, 660, 883, 781, 778,
	779, 851, 843, 894, 895, 228, 43, 870, 42, 839,
	784, 893, 900, 527, 863, 902, 16, 836, 538, 15,
	828, 152, 884, 901, 899, 604, 905, 261, 262, 883,
	272, 49, 803, 261, 262, 261, 262, 261, 262, 48,
	110, 50, 84, 915, 903, 82, 72, 253, 226, 62,
	270, 61, 882, 881, 925, 923, 922, 921, 880, 919,
	584, 879, 926, 740, 148, 145, 45, 927, 732, 916,
	638, 917, 930, 671, 4, 934, 89, 90, 70, 47,
	94, 95, 36, 630, 107, 326, 27, 313, 121, 300,
	112, 26, 18, 17, 3, 19, 439, 30, 766, 31,
	705, 0, 20, 0, 0, 0, 21, 22, 35, 37,
	106, 13, 23, 33, 0, 0, 34, 12, 0, 24,
	0, 29, 87, 88, 10, 39, 40, 41, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 743, 0, 0, 745, 0, 0, 104, 0, 0,
	0, 0, 11, 102, 98, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 25, 78, 79, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 750, 751, 752, 749, 748,
	747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 113, 114,
	105, 73, 14, 644, 32, 0, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 71, 108, 4, 0,
	89, 90, 70, 47, 94, 95, 36, 739, 107, 0,
	27, 0, 0, 0, 112, 26, 18, 17, 0, 19,
	0, 30, 0, 31, 0, 0, 20, 0, 0, 0,
	21, 22, 35, 37, 106, 13, 23, 33, 0, 0,
	34, 12, 0, 24, 0, 29, 87, 88, 10, 39,
	40, 41, 0, 0, 0, 0, 51, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 11, 102, 98, 0,
	0, 91, 92, 93, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 74, 75, 25, 78, 79, 0, 0,
	0, 54, 55, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 113, 114, 105, 73, 14, 545, 32, 0,
	60, 0, 52, 0, 0, 0, 57, 56, 58, 59,
	71, 108, 4, 0, 89, 90, 70, 47, 94, 95,
	36, 0, 107, 0, 27, 0, 0, 0, 112, 26,
	18, 17, 0, 19, 0, 30, 0, 31, 0, 0,
	20, 0, 0, 0, 21, 22, 35, 37, 106, 13,
	23, 33, 0, 0, 34, 12, 0, 24, 0, 29,
	87, 88, 10, 39, 40, 41, 0, 0, 0, 0,
	51, 111, 0, 103, 99, 100, 101, 96, 97, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	11, 102, 98, 0, 0, 91, 92, 93, 0, 0,
	0, 0, 86, 53, 0, 0, 0, 74, 75, 25,
	78, 79, 0, 0, 0, 54, 55, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 113, 114, 105, 73,
	14, 0, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 71, 108, 315, 0, 89, 90,
	70, 47, 94, 95, 36, 0, 107, 0, 27, 0,
	0, 0, 112, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 106, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 87, 88, 321, 39, 40, 41,
	0, 0, 0, 0, 51, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 0, 102, 98, 0, 0, 91,
	92, 93, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 74, 75, 25, 78, 79, 0, 0, 0, 54,
	55, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	113, 114, 105, 73, 14, 935, 32, 0, 60, 0,
	52, 0, 0, 0, 57, 56, 58, 59, 71, 108,
	315, 0, 89, 90, 70, 47, 94, 95, 36, 0,
	107, 0, 27, 0, 0, 0, 112, 26, 18, 17,
	0, 19, 0, 30, 0, 31, 0, 0, 20, 0,
	0, 0, 21, 22, 35, 37, 106, 0, 23, 33,
	0, 0, 34, 0, 0, 24, 0, 29, 87, 88,
	321, 39, 40, 41, 0, 0, 0, 0, 51, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 102,
	98, 0, 0, 91, 92, 93, 0, 0, 0, 0,
	86, 53, 0, 0, 0, 74, 75, 25, 78, 79,
	0, 0, 0, 54, 55, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 113, 114, 105, 73, 14, 928,
	32, 0, 60, 0, 52, 0, 0, 0, 57, 56,
	58, 59, 71, 108, 315, 0, 89, 90, 70, 47,
	94, 95, 36, 0, 107, 0, 27, 0, 0, 0,
	112, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 35, 37,
	106, 0, 23, 33, 0, 0, 34, 0, 0, 24,
	0, 29, 87, 88, 321, 39, 40, 41, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 25, 78, 79, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 113, 114,
	105, 73, 14, 914, 32, 0, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 71, 108, 315, 0,
	89, 90, 70, 47, 94, 95, 36, 0, 107, 0,
	27, 0, 0, 0, 112, 26, 18, 17, 0, 19,
	0, 30, 0, 31, 0, 0, 20, 0, 0, 0,
	21, 22, 35, 37, 106, 0, 23, 33, 0, 0,
	34, 0, 0, 24, 0, 29, 87, 88, 321, 39,
	40, 41, 0, 0, 0, 0, 51, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 0, 102, 98, 0,
	0, 91, 92, 93, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 74, 75, 25, 78, 79, 0, 0,
	0, 54, 55, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 113, 114, 105, 73, 14, 913, 32, 0,
	60, 0, 52, 0, 0, 0, 57, 56, 58, 59,
	71, 108, 315, 0, 89, 90, 70, 47, 94, 95,
	36, 0, 107, 0, 27, 0, 0, 0, 112, 26,
	18, 17, 0, 19, 911, 30, 0, 31, 0, 0,
	20, 0, 0, 0, 21, 22, 35, 37, 106, 0,
	23, 33, 0, 0, 34, 0, 0, 24, 0, 29,
	87, 88, 321, 39, 40, 41, 0, 0, 0, 0,
	51, 111, 0, 103, 99, 100, 101, 96, 97, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	0, 102, 98, 0, 0, 91, 92, 93, 0, 0,
	0, 0, 86, 53, 0, 0, 0, 74, 75, 25,
	78, 79, 0, 0, 0, 54, 55, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 113, 114, 105, 73,
	14, 0, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 71, 108, 315, 0, 89, 90,
	70, 47, 94, 95, 36, 0, 107, 0, 27, 0,
	0, 0, 112, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 106, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 87, 88, 321, 39, 40, 41,
	0, 0, 0, 0, 51, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 0, 102, 98, 0, 0, 91,
	92, 93, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 74, 75, 25, 78, 79, 0, 0, 0, 54,
	55, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	113, 114, 105, 73, 14, 860, 32, 0, 60, 0,
	52, 0, 0, 0, 57, 56, 58, 59, 71, 108,
	315, 0, 89, 90, 70, 47, 94, 95, 36, 0,
	107, 0, 27, 0, 0, 0, 112, 26, 18, 17,
	0, 19, 0, 30, 856, 31, 0, 0, 20, 0,
	0, 0, 21, 22, 35, 37, 106, 0, 23, 33,
	0, 0, 34, 0, 0, 24, 0, 29, 87, 88,
	321, 39, 40, 41, 0, 0, 0, 0, 51, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 102,
	98, 0, 0, 91, 92, 93, 0, 0, 0, 0,
	86, 53, 0, 0, 0, 74, 75, 25, 78, 79,
	0, 0, 0, 54, 55, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 113, 114, 105, 73, 14, 0,
	32, 0, 60, 0, 52, 0, 0, 0, 57, 56,
	58, 59, 71, 108, 315, 0, 89, 90, 70, 47,
	94, 95, 36, 0, 107, 0, 27, 0, 0, 0,
	112, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	790, 0, 20, 0, 0, 0, 21, 22, 35, 37,
	106, 0, 23, 33, 0, 0, 34, 0, 0, 24,
	0, 29, 87, 88, 321, 39, 40, 41, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 25, 78, 79, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 113, 114,
	105, 73, 14, 0, 32, 0, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 71, 108, 315, 0,
	89, 90, 70, 47, 94, 95, 36, 0, 107, 0,
	27, 0, 0, 0, 112, 26, 18, 17, 774, 19,
	0, 30, 0, 31, 0, 0, 20, 0, 0, 0,
	21, 22, 35, 37, 106, 0, 23, 33, 0, 0,
	34, 0, 0, 24, 0, 29, 87, 88, 321, 39,
	40, 41, 0, 0, 0, 0, 51, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 0, 102, 98, 0,
	0, 91, 92, 93, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 74, 75, 25, 78, 79, 0, 0,
	0, 54, 55, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 113, 114, 105, 73, 14, 0, 32, 0,
	60, 0, 52, 0, 0, 0, 57, 56, 58, 59,
	71, 108, 315, 0, 89, 90, 70, 47, 94, 95,
	36, 0, 107, 0, 27, 0, 0, 0, 112, 26,
	18, 17, 0, 19, 0, 30, 0, 31, 0, 0,
	20, 0, 0, 0, 21, 22, 35, 37, 106, 0,
	23, 33, 0, 0, 34, 0, 0, 24, 0, 29,
	87, 88, 321, 39, 40, 41, 0, 0, 0, 0,
	51, 111, 0, 103, 99, 100, 101, 96, 97, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	0, 102, 98, 0, 0, 91, 92, 93, 0, 0,
	0, 0, 86, 53, 0, 0, 685, 74, 75, 25,
	78, 79, 0, 0, 0, 54, 55, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 113, 114, 105, 73,
	14, 0, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 71, 108, 315, 0, 89, 90,
	70, 47, 94, 95, 36, 0, 107, 0, 27, 0,
	0, 0, 112, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 106, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 87, 88, 321, 39, 40, 41,
	0, 0, 0, 0, 51, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 0, 102, 98, 0, 0, 91,
	92, 93, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 74, 75, 25, 78, 79, 0, 0, 0, 54,
	55, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	113, 114, 105, 73, 14, 574, 32, 0, 60, 0,
	52, 0, 0, 0, 57, 56, 58, 59, 71, 108,
	315, 0, 89, 90, 70, 47, 94, 95, 36, 0,
	107, 0, 27, 0, 0, 0, 112, 26, 18, 17,
	0, 19, 0, 30, 0, 31, 0, 0, 20, 0,
	0, 0, 21, 22, 35, 37, 106, 0, 23, 33,
	0, 0, 34, 0, 0, 24, 0, 29, 87, 88,
	321, 39, 40, 41, 0, 0, 0, 0, 51, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 102,
	98, 0, 0, 91, 92, 93, 0, 0, 0, 0,
	86, 53, 0, 0, 0, 74, 75, 25, 78, 79,
	0, 0, 0, 54, 55, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 113, 114, 105, 73, 14, 314,
	32, 0, 60, 0, 52, 0, 0, 0, 57, 56,
	58, 59, 71, 108, 315, 0, 89, 90, 70, 47,
	94, 95, 36, 0, 107, 0, 27, 0, 0, 0,
	112, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 35, 37,
	106, 0, 23, 33, 0, 0, 34, 0, 0, 24,
	0, 29, 87, 88, 321, 39, 40, 41, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 25, 78, 79, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 113, 114,
	105, 73, 14, 0, 32, 0, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 71, 108, 447, 448,
	458, 459, 0, 0, 438, 0, 107, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 493, 494, 495, 496, 497, 485,
	486, 487, 514, 488, 489, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 505, 503, 504,
	500, 501, 0, 0, 492, 498, 499, 506, 507, 509,
	508, 510, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 502, 513, 512, 0, 0, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 461,
	462, 490, 491, 441, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	90, 70, 47, 94, 95, 36, 0, 107, 0, 27,
	0, 0, 0, 112, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 515, 0, 0, 21,
	22, 35, 136, 106, 437, 23, 33, 0, 0, 34,
	0, 0, 24, 0, 29, 87, 88, 0, 0, 108,
	0, 0, 0, 0, 0, 51, 111, 0, 103, 99,
	100, 101, 96, 97, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 0, 102, 98, 0, 0,
	91, 92, 93, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 74, 75, 25, 0, 0, 0, 0, 0,
	54, 55, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 113, 114, 105, 73, 14, 0, 32, 785, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 71,
	108, 89, 90, 70, 47, 94, 95, 36, 0, 107,
	0, 27, 0, 0, 0, 112, 26, 18, 17, 0,
	19, 0, 30, 0, 31, 0, 0, 20, 0, 0,
	0, 21, 22, 35, 136, 106, 0, 23, 33, 0,
	0, 34, 0, 0, 24, 0, 29, 87, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 111, 0,
	103, 99, 100, 101, 96, 97, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 0, 102, 98,
	0, 0, 91, 92, 93, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 74, 75, 25, 0, 0, 0,
	0, 0, 54, 55, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 113, 114, 105, 73, 14, 0, 32,
	852, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 71, 108, 89, 90, 70, 47, 94, 95, 36,
	0, 107, 0, 27, 0, 0, 0, 112, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 0, 0, 20,
	0, 0, 0, 21, 22, 35, 136, 106, 0, 23,
	33, 0, 0, 34, 0, 0, 24, 0, 29, 87,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	111, 0, 103, 99, 100, 101, 96, 97, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 0,
	102, 98, 0, 0, 91, 92, 93, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 74, 75, 25, 0,
	0, 0, 0, 0, 54, 55, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 113, 114, 105, 73, 14,
	0, 32, 687, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 71, 108, 89, 90, 70, 47, 94,
	95, 36, 0, 107, 0, 27, 0, 0, 0, 112,
	26, 18, 17, 0, 19, 0, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 35, 136, 106,
	0, 23, 33, 0, 0, 34, 0, 0, 24, 0,
	29, 87, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 111, 0, 103, 99, 100, 101, 96, 97,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 0, 102, 98, 0, 0, 91, 92, 93, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 74, 75,
	25, 0, 0, 0, 0, 0, 54, 55, 76, 63,
	64, 65, 66, 67, 68, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 113, 114, 105,
	73, 14, 0, 32, 673, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 71, 108, 89, 90, 70,
	47, 94, 95, 36, 0, 107, 0, 27, 0, 0,
	0, 112, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	136, 106, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 87, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 111, 0, 103, 99, 100, 101,
	96, 97, 0, 0, 0, 0, 0, 0, 104, 0,
	0, 0, 0, 0, 102, 98, 0, 0, 91, 92,
	93, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	74, 75, 25, 0, 0, 0, 0, 0, 54, 55,
	76, 63, 64, 65, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 113,
	114, 105, 73, 14, 0, 32, 656, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 71, 108, 89,
	90, 70, 47, 94, 95, 36, 0, 107, 0, 27,
	0, 0, 0, 112, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 35, 136, 106, 0, 23, 33, 0, 0, 34,
	0, 0, 24, 0, 29, 87, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 111, 0, 103, 99,
	100, 101, 96, 97, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 0, 102, 98, 0, 0,
	91, 92, 93, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 74, 75, 25, 0, 0, 0, 0, 0,
	54, 55, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 113, 114, 105, 73, 14, 0, 32, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 71,
	108, 447, 448, 458, 459, 0, 0, 885, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 493, 494, 495,
	496, 497, 485, 486, 487, 514, 488, 489, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	505, 503, 504, 500, 501, 0, 0, 492, 498, 499,
	506, 507, 509, 508, 510, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 502, 513, 512,
	0, 0, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 461, 462, 490, 491, 441, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 447, 448, 458, 459, 0, 515,
	885, 0, 115, 113, 114, 0, 0, 0, 904, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	493, 494, 495, 496, 497, 485, 486, 487, 514, 488,
	489, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 505, 503, 504, 500, 501, 0, 0,
	492, 498, 499, 506, 507, 509, 508, 510, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	502, 513, 512, 0, 0, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 461, 462, 490, 491, 441,
	442, 443, 444, 445, 446, 0, 89, 90, 70, 0,
	94, 95, 142, 0, 107, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	106, 0, 515, 0, 0, 115, 113, 114, 0, 0,
	0, 876, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 231, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 141, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 90, 70, 0,
	94, 95, 142, 0, 107, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 115, 113, 114,
	105, 73, 0, 0, 0, 0, 60, 0, 52, 136,
	106, 230, 57, 56, 58, 59, 71, 108, 0, 0,
	0, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 541, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 141, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 90, 70, 0,
	94, 95, 142, 0, 107, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 115, 113, 114,
	105, 73, 0, 0, 0, 0, 60, 537, 52, 136,
	106, 0, 57, 56, 58, 59, 71, 108, 0, 0,
	0, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 541, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 141, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 90, 70, 0,
	94, 95, 142, 0, 107, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 115, 113, 114,
	105, 73, 0, 0, 0, 0, 60, 0, 52, 136,
	106, 0, 57, 56, 58, 59, 71, 108, 0, 0,
	0, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 599, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 141, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 90, 70, 0,
	94, 95, 142, 430, 107, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 115, 113, 114,
	105, 73, 0, 0, 0, 0, 60, 0, 52, 136,
	106, 598, 57, 56, 58, 59, 71, 108, 0, 0,
	0, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 141, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 90, 70, 0,
	94, 95, 142, 0, 107, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 115, 113, 114,
	105, 73, 0, 0, 0, 0, 60, 0, 52, 136,
	106, 0, 57, 56, 58, 59, 71, 108, 0, 0,
	0, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 141, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 90, 70, 0,
	94, 95, 142, 0, 107, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 115, 113, 114,
	105, 73, 0, 0, 0, 0, 60, 0, 52, 136,
	106, 391, 57, 56, 58, 59, 71, 108, 0, 0,
	0, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 141, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 142, 0, 107,
	0, 0, 0, 0, 0, 112, 89, 90, 70, 0,
	94, 95, 142, 0, 107, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 115, 113, 114,
	105, 73, 0, 0, 0, 367, 60, 0, 52, 136,
	106, 0, 57, 56, 58, 59, 71, 108, 111, 0,
	0, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 238, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 141, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 113, 114, 0, 0, 0, 0, 0,
	0, 236, 0, 239, 0, 0, 0, 115, 113, 114,
	105, 73, 108, 0, 0, 0, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 71, 108, 447, 448,
	458, 459, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 493, 494, 495, 496, 497, 485,
	486, 487, 514, 488, 489, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 505, 503, 504,
	500, 501, 0, 0, 492, 498, 499, 506, 507, 509,
	508, 510, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 502, 513, 512, 0, 0, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 461,
	462, 490, 491, 441, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 447, 448, 458, 459, 0, 0, 920, 0,
	0, 0, 0, 0, 0, 0, 515, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 493, 494,
	495, 496, 497, 485, 486, 487, 514, 488, 489, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 505, 503, 504, 500, 501, 0, 0, 492, 498,
	499, 506, 507, 509, 508, 510, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 502, 513,
	512, 0, 0, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 461, 462, 490, 491, 750, 751, 752,
	749, 748, 747, 158, 160, 159, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 0, 156, 157, 168, 171,
	172, 173, 174, 175, 176, 178, 180, 0, 0, 0,
	0, 0, 0, 0, 158, 160, 159, 182, 0, 0,
	0, 0, 761, 183, 162, 166, 165, 0, 0, 0,
	0, 0, 161, 0, 163, 167, 169, 170, 177, 179,
	164, 184, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 157, 168,
	171, 172, 173, 174, 175, 176, 178, 180, 0, 0,
	0, 0, 0, 0, 0, 158, 160, 159, 182, 0,
	0, 719, 0, 0, 183, 162, 166, 165, 0, 0,
	0, 0, 0, 161, 0, 163, 167, 169, 170, 177,
	179, 164, 184, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 157,
	168, 171, 172, 173, 174, 175, 176, 178, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 699, 158,
	160, 159, 182, 0, 0, 183, 162, 166, 165, 0,
	0, 0, 0, 0, 161, 0, 163, 167, 169, 170,
	177, 179, 164, 0, 0, 0, 184, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 157, 168, 171, 172, 173, 174, 175,
	176, 178, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 697, 158, 160, 159, 182, 0, 0, 183,
	162, 166, 165, 0, 0, 0, 0, 0, 161, 0,
	163, 167, 169, 170, 177, 179, 164, 0, 0, 0,
	184, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 157, 168, 171,
	172, 173, 174, 175, 176, 178, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 688, 158, 160, 159,
	182, 0, 0, 183, 162, 166, 165, 0, 0, 0,
	0, 0, 161, 0, 163, 167, 169, 170, 177, 179,
	164, 0, 0, 0, 184, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 157, 168, 171, 172, 173, 174, 175, 176, 178,
	180, 0, 0, 0, 0, 0, 0, 0, 158, 160,
	159, 182, 0, 0, 684, 0, 0, 183, 162, 166,
	165, 0, 0, 0, 0, 0, 161, 0, 163, 167,
	169, 170, 177, 179, 164, 184, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 157, 168, 171, 172, 173, 174, 175, 176,
	178, 180, 0, 0, 0, 0, 0, 0, 0, 158,
	160, 159, 182, 0, 0, 683, 0, 0, 183, 162,
	166, 165, 0, 0, 0, 0, 0, 161, 0, 163,
	167, 169, 170, 177, 179, 164, 184, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 157, 168, 171, 172, 173, 174, 175,
	176, 178, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 158, 160, 159, 182, 0, 0, 183,
	162, 166, 165, 0, 0, 0, 0, 0, 161, 0,
	163, 167, 169, 170, 177, 179, 164, 0, 0, 0,
	184, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 157, 168, 171,
	172, 173, 174, 175, 176, 178, 180, 0, 0, 0,
	0, 0, 0, 0, 158, 160, 159, 182, 0, 0,
	628, 0, 0, 183, 162, 166, 165, 0, 0, 0,
	0, 0, 161, 0, 163, 167, 169, 170, 177, 179,
	164, 184, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 157, 168,
	171, 172, 173, 174, 175, 176, 178, 180, 0, 0,
	0, 0, 0, 0, 0, 158, 160, 159, 182, 0,
	0, 627, 0, 0, 183, 162, 166, 165, 0, 0,
	0, 0, 0, 161, 0, 163, 167, 169, 170, 177,
	179, 164, 184, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 157,
	168, 171, 172, 173, 174, 175, 176, 178, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 158,
	160, 159, 182, 0, 0, 183, 162, 166, 165, 0,
	0, 0, 0, 0, 161, 0, 163, 167, 169, 170,
	177, 179, 164, 0, 0, 0, 184, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 157, 168, 171, 172, 173, 174, 175,
	176, 178, 180, 0, 0, 0, 0, 0, 0, 0,
	158, 160, 159, 182, 0, 0, 601, 0, 0, 183,
	162, 166, 165, 0, 0, 0, 0, 0, 161, 0,
	163, 167, 169, 170, 177, 179, 164, 184, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 157, 168, 171, 172, 173, 174,
	175, 176, 178, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 591, 158, 160, 159, 182, 572, 0,
	183, 162, 166, 165, 0, 0, 0, 0, 0, 161,
	0, 163, 167, 169, 170, 177, 179, 164, 0, 0,
	0, 184, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 157, 168,
	171, 172, 173, 174, 175, 176, 178, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 160, 159,
	182, 589, 0, 0, 183, 162, 166, 165, 0, 0,
	0, 0, 0, 161, 0, 163, 167, 169, 170, 177,
	179, 164, 0, 0, 184, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 157, 168, 171, 172, 173, 174, 175, 176, 178,
	180, 0, 0, 0, 0, 0, 0, 0, 158, 160,
	159, 182, 0, 0, 0, 0, 0, 183, 162, 166,
	165, 0, 0, 0, 0, 0, 161, 0, 163, 167,
	169, 170, 177, 179, 164, 184, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 157, 168, 171, 172, 173, 174, 175, 176,
	178, 180, 0, 0, 0, 0, 0, 0, 0, 158,
	160, 159, 182, 568, 0, 0, 0, 0, 183, 162,
	166, 165, 0, 0, 0, 0, 0, 161, 0, 163,
	167, 169, 170, 177, 179, 164, 184, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 157, 168, 171, 172, 173, 174, 175,
	176, 178, 180, 0, 0, 0, 0, 0, 0, 0,
	158, 160, 159, 182, 0, 0, 563, 0, 0, 183,
	162, 166, 165, 0, 0, 0, 0, 0, 161, 0,
	163, 167, 169, 170, 177, 179, 164, 184, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 157, 168, 171, 172, 173, 174,
	175, 176, 178, 180, 0, 0, 0, 0, 0, 0,
	0, 158, 160, 159, 182, 0, 0, 559, 0, 0,
	183, 162, 166, 165, 0, 0, 0, 0, 0, 161,
	0, 163, 167, 169, 170, 177, 179, 164, 184, 181,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 157, 168, 171, 172, 173,
	174, 175, 176, 178, 180, 0, 0, 0, 0, 0,
	0, 0, 158, 160, 159, 182, 0, 0, 421, 0,
	0, 183, 162, 166, 165, 0, 0, 0, 0, 0,
	161, 0, 163, 167, 169, 170, 177, 179, 164, 184,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 157, 168, 171, 172,
	173, 174, 175, 176, 178, 180, 0, 0, 0, 0,
	0, 0, 0, 158, 160, 159, 182, 0, 0, 0,
	0, 0, 183, 162, 166, 165, 0, 0, 0, 0,
	0, 161, 0, 163, 167, 169, 170, 177, 179, 164,
	184, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 157, 168, 171,
	172, 173, 174, 175, 176, 178, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 158, 160,
	159, 182, 0, 183, 162, 166, 165, 0, 0, 0,
	0, 0, 161, 0, 163, 167, 169, 170, 177, 179,
	164, 0, 0, 0, 0, 184, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 157, 168, 171, 172, 173, 174, 175, 176,
	178, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 158, 160, 159, 182, 0, 183, 162,
	166, 165, 0, 0, 0, 0, 0, 161, 0, 163,
	167, 169, 170, 177, 179, 164, 0, 0, 0, 0,
	184, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 157, 168, 171,
	172, 173, 174, 175, 176, 178, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 159, 182, 0, 0,
	0, 0, 0, 183, 162, 166, 165, 0, 0, 0,
	0, 0, 161, 0, 163, 167, 169, 170, 177, 179,
	164, 184, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 157, 168,
	171, 172, 173, 174, 175, 176, 178, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 182, 0,
	0, 0, 0, 0, 183, 162, 166, 165, 0, 0,
	0, 0, 0, 161, 0, 163, 167, 169, 170, 177,
	179, 164, 184, 181, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 157,
	168, 171, 172, 173, 174, 175, 176, 178, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 183, 162, 166, 165, 0,
	0, 0, 0, 0, 161, 0, 163, 167, 169, 170,
	177, 179, 164, 184, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	157, 168, 171, 172, 173, 174, 175, 176, 178, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 183, 162, 166, 165,
	0, 0, 0, 0, 0, 161, 0, 163, 167, 169,
	170, 177, 179, 164, 184, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 157, 168, 171, 172, 173, 174, 175, 176, 178,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 183, 162, 166,
	165, 0, 0, 0, 0, 0, 161, 0, 163, 167,
	169, 170, 177, 179, 164, 184, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 157, 168, 171, 172, 173, 174, 175, 176,
	178, 180, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	166, 165, 0, 0, 0, 0, 0, 161, 181, 163,
	167, 169, 170, 177, 179, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 168, 171, 172, 173, 174,
	175, 176, 178, 180, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 166, 165, 0, 0, 0, 0, 0, 161,
	181, 163, 167, 169, 170, 177, 179, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 171, 172,
	173, 174, 175, 176, 178, 180, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 166, 165, 0, 0, 0, 0,
	0, 161, 181, 163, 167, 169, 170, 177, 179, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	171, 172, 173, 174, 175, 176, 178, 180, 182, 142,
	0, 107, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 182, 162, 166, 165, 0, 0,
	0, 0, 0, 181, 0, 163, 167, 169, 170, 177,
	179, 164, 0, 0, 0, 0, 0, 0, 0, 181,
	168, 171, 172, 173, 174, 175, 176, 178, 180, 669,
	111, 0, 0, 0, 0, 0, 168, 171, 172, 173,
	174, 175, 176, 178, 180, 0, 162, 166, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 169, 170,
	177, 179, 164, 166, 165, 0, 0, 0, 238, 0,
	0, 0, 0, 167, 169, 170, 177, 179, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 113, 114, 0, 0, 0,
	0, 0, 0, 236, 0, 670, 0, 0, 668, 0,
	0, 0, 0, 0, 108,
}

var yyPact = [...]int{
	-1000, -1000, 1260, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	222, 489, 593, 750, -1000, -1000, -1000, 218, 4475, 215,
	213, 5712, 5712, 5712, 135, 712, 5712, -1000, 7320, 212,
	211, 210, -1000, 406, 5712, 785, 237, 33, 566, 780,
	775, 773, 511, 506, 391, -1000, -1000, 208, -1000, -1000,
	202, 205, 4872, 5712, 5697, 5697, 5712, 5712, 5712, 5712,
	5712, -1000, -1000, 5712, 5712, 5712, 5712, 5712, 5712, 5712,
	201, 5712, -1000, 820, 5712, 5712, 5712, -1000, -1000, -1000,
	-1000, 83, -1000, 564, 554, -1000, 282, 200, 196, 5712,
	5712, 195, 5712, 5712, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 758, 816, 33, -1000, 118, 166,
	166, 193, -1000, -1000, -1000, -1000, 143, 280, -1000, -1000,
	-1000, 328, 573, -10, 612, 571, -1000, -1000, -1000, -1000,
	-11, -1000, -62, 3228, 5712, 699, 33, 5712, 5712, 325,
	7385, 665, -1000, 323, 311, -15, -1000, -1000, -16, -1000,
	-1000, -65, -18, -1000, 7385, -1000, 5712, 5712, 5712, 5712,
	5712, 5712, 5712, 5712, 5712, 5712, 5712, 5712, 5712, 5712,
	5712, 5712, 5712, 5712, 5712, 5712, 5712, 5712, 5712, 5712,
	5712, 5712, 105, 5592, 5712, 5697, 5712, 750, -1000, 7255,
	310, -1000, 772, -1000, 770, -1000, 624, -1000, 625, 190,
	4475, 184, 308, 226, 5472, 5712, 5712, 5712, 5712, 5712,
	5712, 5712, 5712, 5712, 5712, 5712, 5712, 5712, -1000, -1000,
	5712, 5712, 5712, 98, 4872, 81, 23, -1000, -1000, 7194,
	5697, 5712, 179, -1000, -1000, 83, 5712, -1000, -1000, 4872,
	-1000, 421, 421, 482, 421, 7133, 421, 421, 421, 421,
	421, 421, 421, -1000, 5712, 421, 376, 818, 810, -1000,
	176, 5352, 5697, 7629, 7568, 7629, 5712, 3554, 3554, 166,
	-1000, 541, 239, 166, -1000, -1000, 5712, 5712, 7385, 7385,
	5712, 7385, 7385, 735, -1000, 696, 534, 818, 177, 5712,
	-1000, -1000, 4992, -1000, 4872, 307, -1000, -1000, 1096, -1000,
	304, -26, 602, 571, -1000, 561, 405, 752, 580, -1000,
	-1000, 750, 5712, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 170, 7072, 169, -1000, 303, 22, 7385, 7011, -1000,
	-1000, -1000, -1000, 135, -1000, 725, 5712, -1000, 5712, 7742,
	7794, 7446, 7629, 7507, 7846, 7913, 7897, 58, 58, 58,
	482, 421, 482, 482, 155, 155, 404, 404, 404, 404,
	265, 265, 265, 265, 404, -1000, 6950, 5712, 7690, 17,
	-1000, -1000, 6889, -35, 3064, -1000, -1000, -1000, 167, 624,
	608, 491, 402, -1000, 491, 5712, -1000, 5712, -1000, -1000,
	7629, 5712, 7629, 7629, 7629, 7629, 7629, 7629, 7629, 7629,
	7629, 7629, 7629, 7629, 7629, 6826, 76, 6762, 166, -1000,
	5712, -1000, 141, -68, 4872, 5232, -1000, 7385, 4872, 6701,
	63, -1000, 136, -1000, -1000, -1000, -1000, 188, 733, 6637,
	80, 332, 5712, 46, 166, -1000, -1000, 5712, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 166, -1000, -1000, -1000,
	-1000, 135, 5712, 5712, 98, 135, 624, -20, -1000, 7385,
	6576, 6515, -1000, -1000, -1000, 299, 6451, -1000, -21, -1000,
	7385, 5712, 134, -1000, 932, -1000, -1000, -1000, 400, 579,
	-1000, 571, 685, 647, -1000, 399, -1000, 7385, 131, 4313,
	5712, 5712, 5712, 161, -1000, -1000, 7385, -1000, 5712, 7690,
	130, 5697, 7979, 4151, -1000, 156, 299, 608, -1000, 491,
	-1000, -1000, 398, -45, -1000, 6390, 6329, 2900, 7913, 3989,
	-1000, -1000, -1000, 6265, -71, 5712, -1000, 7385, 5697, 154,
	119, -1000, -1000, -1000, 45, -1000, -1000, 709, -1000, -1000,
	-1000, -1000, 5712, -1000, 7629, -1000, -1000, 6201, -1000, -1000,
	40, 6137, -1000, -1000, 608, 116, 5712, -1000, -1000, 114,
	-23, -1000, 36, -1000, -1000, 479, -1000, -1000, -1000, -1000,
	111, 5112, 7385, -1000, -1000, 571, 393, -41, -1000, -1000,
	571, 647, -1000, 302, -1000, -1000, -1000, 6076, 301, 7385,
	-1000, 298, 290, 7690, 289, -1000, 110, 600, 5697, 153,
	4872, -1000, -1000, -1000, 649, 299, 106, -1000, 386, -45,
	956, -1000, 491, 4475, 189, 287, -1000, -1000, -1000, 5712,
	7629, -1000, 4872, -71, -1000, -1000, 6015, -1000, -1000, -1000,
	-1000, -1000, -1000, 100, 299, 510, -1000, -1000, -1000, -1000,
	-42, -1000, 571, 331, 647, -1000, -41, -1000, 2736, 279,
	5712, 375, -1000, 827, -1000, -1000, 3665, 7979, -1000, 4872,
	39, 2572, -1000, 151, 379, 103, 638, 378, -1000, -1000,
	-1000, 299, 659, 491, 705, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 741, -1000, -1000, -1000, -1000, 3392, 7629,
	101, 330, 377, -1000, 299, -1000, 722, -1000, 300, 571,
	-42, -1000, -1000, 283, 262, -1000, 99, -1000, 5712, 150,
	371, 261, 786, -1000, -1000, -1000, 94, -1000, 92, -1000,
	258, 491, -1000, 100, 100, 147, -1000, 664, 711, 5874,
	33, -43, -1000, -1000, 3392, -71, -1000, -1000, 581, -1000,
	-72, -1000, -1000, 266, -1000, -1000, 3827, 333, -1000, -1000,
	-1000, -1000, -1000, 257, 2408, 3665, -1000, -1000, 90, -1000,
	2244, 348, 340, 181, 550, -1000, -33, -1000, -73, -34,
	-1000, -79, 5874, -1000, -1000, 4770, 431, 5712, 5712, -1000,
	-1000, -1000, -1000, -1000, 3392, -1000, 249, -1000, 88, 491,
	-1000, -1000, -1000, -39, -1000, -1000, 714, -1000, -1000, 711,
	-1000, 5712, -1000, 5874, 5712, -1000, -1000, 4637, -1000, 245,
	242, 622, 682, 538, -1000, -1000, -1000, 7629, 7385, 2080,
	3392, -1000, 334, -1000, 1916, 1752, -1000, 181, -1000, -1000,
	7385, -1000, 7385, 145, -1000, -1000, -1000, -1000, 491, 5998,
	5874, 231, -1000, -1000, -1000, -1000, -1000, -1000, 299, -45,
	-1000, -1000, 5874, -1000, -1000, 1588, 86, -1000, -1000, 100,
	230, -1000, -1000, -1000, 1424, -1000,
}

var yyPgo = [...]int{
	0, 960, 958, 15, 7, 956, 4, 29, 13, 954,
	11, 44, 78, 71, 52, 42, 949, 21, 948, 79,
	18, 51, 947, 31, 945, 0, 62, 3, 943, 933,
	928, 38, 73, 30, 19, 32, 926, 925, 50, 924,
	82, 923, 8, 921, 918, 913, 912, 14, 48, 911,
	910, 99, 92, 219, 909, 908, 39, 907, 906, 5,
	905, 84, 41, 902, 56, 49, 901, 900, 899, 891,
	890, 87, 885, 881, 880, 10, 879, 88, 878, 877,
	876, 874, 873, 869, 868, 25, 26, 592, 9, 101,
	868, 866, 865, 46, 33, 37, 2, 16, 688, 43,
	83, 862, 856, 853, 12, 852, 851, 558, 846, 40,
	36, 839, 829, 6, 778, 20, 599, 826, 824, 34,
	823, 80, 1, 17, 821, 810, 802, 799, 798, 28,
}

var yyR1 = [...]int{
	0, 128, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	121, 121, 90, 90, 89, 89, 10, 10, 10, 10,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 114, 114, 16, 16, 18,
	18, 7, 7, 86, 86, 85, 85, 87, 87, 17,
	17, 20, 20, 19, 19, 77, 77, 122, 122, 22,
	22, 22, 22, 22, 22, 22, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	118, 118, 74, 74, 30, 30, 108, 108, 31, 12,
	1, 1, 2, 2, 13, 13, 127, 127, 98, 98,
	14, 15, 109, 109, 111, 111, 110, 110, 115, 115,
	115, 115, 105, 105, 104, 104, 29, 29, 102, 102,
	102, 102, 119, 119, 119, 8, 8, 106, 106, 84,
	84, 76, 76, 91, 91, 80, 80, 27, 27, 28,
	28, 33, 33, 34, 34, 97, 97, 95, 95, 95,
	96, 96, 99, 99, 78, 78, 35, 35, 37, 37,
	38, 39, 39, 40, 40, 123, 123, 41, 41, 41,
	41, 75, 75, 101, 101, 101, 120, 120, 42, 42,
	43, 44, 44, 44, 44, 46, 46, 45, 103, 103,
	125, 125, 124, 124, 126, 126, 113, 113, 113, 113,
	113, 113, 79, 79, 47, 47, 83, 83, 88, 21,
	73, 73, 48, 23, 23, 24, 24, 50, 49, 49,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 107, 107, 129,
	3, 3, 112, 112, 81, 81, 59, 59, 60, 60,
	60, 60, 51, 51, 52, 52, 57, 57, 117, 117,
	117, 100, 100, 64, 64, 64, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 65, 65, 65, 25, 25, 26, 26, 63,
	66, 66, 66, 67, 67, 67, 68, 68, 68, 68,
	68, 68, 32, 32, 32, 53, 53, 53, 69, 69,
	70, 70, 70, 70, 70, 70, 61, 61, 61, 62,
	62, 62, 56, 93, 93, 55, 55, 92, 92, 92,
	92, 92, 92, 92, 116, 116, 116, 116, 71, 71,
	71, 71, 71, 71, 71, 72, 72, 72, 72, 54,
	54, 54, 54, 54, 54, 54, 82, 82, 94,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 5, 4,
	3, 4, 3, 4, 3, 1, 1, 6, 7, 6,
	7, 0, 1, 3, 1, 3, 1, 3, 1, 1,
	2, 1, 3, 1, 2, 3, 1, 2, 0, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 1, 5,
	7, 9, 5, 3, 3, 3, 3, 3, 3, 1,
	2, 6, 7, 9, 5, 1, 6, 3, 3, 2,
	0, 9, 1, 3, 0, 4, 1, 3, 1, 11,
	0, 1, 0, 1, 9, 8, 1, 2, 1, 1,
	6, 7, 0, 2, 0, 2, 0, 2, 1, 2,
	4, 3, 1, 4, 1, 4, 1, 4, 3, 4,
	4, 5, 0, 5, 4, 1, 1, 1, 4, 5,
	6, 1, 3, 6, 7, 3, 6, 1, 0, 1,
	3, 4, 6, 0, 1, 1, 2, 1, 1, 1,
	0, 2, 2, 4, 1, 3, 1, 2, 3, 1,
	1, 3, 1, 1, 3, 2, 0, 4, 4, 3,
	10, 1, 3, 1, 2, 3, 1, 2, 2, 2,
	3, 3, 3, 4, 3, 1, 1, 3, 1, 3,
	1, 1, 0, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 4, 3, 1, 4, 4,
	3, 1, 1, 0, 1, 3, 1, 8, 3, 2,
	6, 5, 3, 4, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 5, 4, 3, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 3,
	2, 1, 2, 4, 2, 1, 2, 11, 9, 0,
	0, 1, 0, 4, 3, 1, 1, 2, 2, 4,
	4, 2, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 0, 1, 4, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 2, 3, 3,
	1, 1, 1, 3, 3, 1, 1, 0, 1, 1,
	1, 3, 1, 1, 3, 1, 1, 4, 4, 4,
	4, 1, 1, 1, 3, 1, 4, 2, 3, 3,
	1, 4, 4, 3, 3, 3, 1, 3, 1, 1,
	3, 1, 1, 0, 1, 3, 1, 3, 1, 4,
	2, 2, 6, 4, 2, 2, 1, 2, 1, 4,
	3, 3, 3, 6, 3, 1, 1, 2, 1, 5,
	4, 2, 2, 4, 2, 2, 1, 3, 1,
}

var yyChk = [...]int{
	-1000, -128, -121, -9, 2, -11, -12, -13, -14, -15,
	52, 80, 45, 39, 150, -76, -80, 21, 20, 23,
	30, 34, 35, 40, 47, 99, 19, 14, -25, 49,
	25, 27, 152, 41, 44, 36, 10, 37, -127, 53,
	54, 55, -84, -91, -32, -36, -98, 7, -68, -69,
	-66, 60, 156, 93, 105, 106, 161, 160, 162, 163,
	154, -49, -54, 108, 109, 110, 111, 112, 113, 114,
	6, 164, -58, 149, 97, 98, 107, -107, 100, 101,
	-53, -65, -60, -51, -63, -64, 92, 50, 51, 4,
	5, 85, 86, 87, 8, 9, 67, 68, 82, 64,
	65, 66, 81, 63, 75, 148, 38, 12, 165, -10,
	-67, 61, 18, 146, 147, 145, 154, -89, 150, 10,
	146, -18, -114, -87, -89, 83, 37, 39, -19, -20,
	-77, -21, 10, -122, 154, -11, 37, 154, 154, -26,
	-25, 99, 10, -26, -26, -37, -38, -53, -39, -107,
	-40, 12, -73, -48, -25, 152, 131, 132, 88, 90,
	89, 167, 159, 169, 175, 161, 160, 170, 133, 171,
	172, 134, 135, 136, 137, 138, 139, 173, 140, 174,
	141, 116, 91, 158, 115, 154, 154, 154, 150, -25,
	10, 153, -3, 159, 53, -98, 10, 10, 10, 94,
	95, 94, 96, 95, 168, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 105, 106,
	154, 156, 150, 58, 154, -56, -55, -93, -92, -25,
	159, 84, 60, -25, -32, -65, 154, -64, 99, 156,
	-32, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -57, 154, -25, -117, 17, -116, -71,
	12, 77, 78, -25, -25, -25, 156, 79, 79, -52,
	-50, -51, -70, 53, -10, -53, 154, 154, -25, -25,
	154, -25, -25, 17, 76, -116, -116, 17, -3, 150,
	-53, -99, 154, -99, 154, 155, 152, 150, -121, 152,
	-16, -87, -89, 83, 152, 166, 83, 29, -89, -20,
	152, 166, 168, -22, 151, 2, -11, -12, -13, -14,
	-15, 52, -25, 21, -3, -23, -24, -25, -25, 152,
	152, 152, 152, 166, 152, 166, 168, 152, 166, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -52, -25, 153, -25, -108,
	-31, -32, -25, -77, -122, 152, 152, 10, -129, 10,
	-109, 56, -129, -111, 56, 154, -11, 154, 152, 153,
	-25, 159, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -26, -25, -62, 10,
	150, -53, -56, 157, 166, 59, -32, -25, 154, -25,
	-56, 155, -26, 149, -71, -71, 17, 156, 58, -25,
	11, -32, 59, -26, -61, -6, -53, 150, 10, -5,
	-4, 99, 100, 101, 102, 103, 104, 4, 5, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 6, 7,
	94, 95, 96, 19, 20, 21, 22, 23, 24, 25,
	26, 27, 28, 29, 41, 42, 43, 44, 45, 46,
	47, 48, 49, 50, 51, 35, 36, 37, 39, 40,
	97, 98, 60, 30, 31, 32, 33, 34, 61, 62,
	56, 57, 80, 54, 55, 53, 63, 64, 66, 65,
	67, 68, 82, 81, 38, 142, -61, -6, -53, -100,
	-99, 79, 156, 150, 58, 79, -100, -82, -94, -25,
	-25, -25, 76, 76, 148, 154, -25, 155, -78, -35,
	-25, 84, -56, 152, -121, 151, 152, 152, 83, -89,
	-19, 83, -89, 150, 10, 83, -21, -25, 154, 155,
	154, 152, 166, 155, -38, -40, -25, -48, 153, -25,
	-7, 166, 29, 155, 151, -129, 154, -109, -110, 57,
	-10, 150, -129, -75, -10, -25, -25, -122, -25, 155,
	157, 151, -99, -25, 155, 168, -93, -25, 159, 60,
	-56, 155, 157, 155, -72, 10, 13, 160, 12, 10,
	151, 151, 156, 151, -25, 157, -99, -25, -99, -53,
	-26, -25, -62, -53, -109, -7, 166, 155, 155, -27,
	-28, -33, -34, -97, -95, 158, 61, 62, -10, 151,
	-7, 166, -25, 155, 151, 150, 83, -86, -17, -20,
	-114, 150, -129, 155, -106, -11, 153, -25, -23, -25,
	-102, 150, 153, -25, 155, -31, -115, -32, 159, 60,
	156, -29, -11, 153, -118, 154, -27, -110, -129, -75,
	-123, 150, 166, 155, 155, 96, -11, 153, 151, 168,
	-25, -32, 154, 155, 157, 13, -25, 151, 157, 151,
	-110, 155, -94, 155, 166, -1, 159, -95, 155, -35,
	-85, -20, 150, -7, 166, -20, -86, 152, -122, 155,
	152, -119, 152, -119, 152, 152, 155, 59, -32, 154,
	-56, -122, -30, 42, 43, -27, 155, -129, 150, 151,
	-41, -125, -124, 45, -126, 48, -113, 104, 103, 102,
	99, 100, 101, -123, -10, -11, 153, 152, -122, -25,
	-56, 157, -129, -96, 153, -33, -2, 84, -7, 166,
	-85, 151, -17, -7, 22, 152, -23, 151, 32, 33,
	-119, 31, -119, -104, -11, 153, -115, -32, -56, 157,
	28, 154, 150, 155, -112, 45, 150, -123, -34, 39,
	37, -75, -113, 151, -122, 155, 151, 150, -129, -97,
	12, 151, -20, -7, 151, 152, 155, -25, -8, 153,
	152, 151, 152, 31, -122, 155, 155, 152, -74, -10,
	-122, -96, -96, 154, -123, 151, -79, -47, 12, -83,
	-88, -6, -3, -101, 152, 150, -123, 59, 168, 151,
	-105, -11, 153, -8, -122, 152, 26, -104, 12, 167,
	151, 150, 150, -81, -59, 12, 159, 151, 152, 166,
	-129, 168, 152, 166, 168, -6, 151, -120, -42, -43,
	-44, -45, -46, -10, -6, 10, 151, -25, -25, -122,
	-122, 152, 155, -10, -122, -122, 155, 166, 12, -47,
	-25, -88, -25, -129, 151, -42, 152, 152, 46, 29,
	79, 24, 150, 151, 151, -59, -129, -129, 154, -75,
	10, -4, -113, -6, 152, -122, -27, -6, 151, 155,
	-96, -103, 152, 150, -122, 151,
}

var yyDef = [...]int{
	81, -2, -2, 80, 90, 91, 92, 93, 94, 95,
	0, 0, 0, 0, 128, 137, 138, 0, 0, 0,
	0, 427, 427, 427, 0, 392, 0, 149, 0, 0,
	0, 0, 155, 0, 0, 0, 86, 380, 0, 0,
	0, 0, 211, 0, -2, 426, 176, 0, -2, 443,
	429, 0, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 358, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 368, 398, 0, 371, 0, 375, 178, 179,
	436, 421, 441, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 0, 0, 380, 445, 0, -2,
	0, 0, 405, 87, 88, 89, 0, 0, 81, 84,
	85, 0, 0, 0, 121, 0, 105, 106, 118, 123,
	0, 126, 0, 0, 0, 0, 380, 293, 0, 0,
	428, 392, 86, 0, 0, 0, 239, 240, 0, 376,
	242, 243, 0, 291, 292, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 0,
	0, 159, 379, 381, 0, 177, 182, 379, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 320,
	0, 427, 0, 0, 463, 0, 462, 466, 464, 468,
	0, 0, 0, 304, -2, 0, 0, -2, 392, 463,
	-2, 339, 340, 341, 342, 0, 359, 360, 361, 362,
	363, 364, 365, 366, 427, 367, 0, 399, 400, 476,
	478, 0, 0, 370, 372, 374, 427, 0, 0, 401,
	299, 394, 395, 401, 393, 450, 0, 0, 491, 492,
	0, 494, 495, 0, 417, 0, 0, 0, 0, 0,
	447, 388, 0, 391, 463, 0, 97, 81, 0, 100,
	0, 0, 121, 0, 102, 0, 0, 0, 121, 124,
	104, 0, 0, 127, 136, 129, 130, 131, 132, 133,
	134, 0, 0, 0, 379, 0, 294, 296, 0, 143,
	144, 145, 146, 0, 147, 0, 0, 148, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
	333, 334, 335, 336, 337, 338, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 352, 0, 0, 357, 111,
	166, -2, 0, 0, 0, 157, 158, 379, 0, 182,
	186, 0, 0, 379, 0, 0, 212, 0, 215, 128,
	302, 0, 305, 306, 307, 308, 309, 310, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 444, 459,
	0, 461, 0, 404, 463, 0, -2, 471, 463, 0,
	0, -2, 0, 369, 477, 474, 475, 0, 0, 0,
	0, 430, 0, 0, 0, -2, -2, 0, 78, 79,
	71, 72, 73, 74, 75, 76, 77, 2, 3, 4,
	5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
	35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
	45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 0, -2, -2, 298,
	402, 0, 427, 0, 0, 0, 182, 111, 496, 498,
	0, 0, 416, 419, 418, -2, 0, 232, 111, 234,
	236, 0, 0, 96, 0, 99, 101, 103, 0, 121,
	117, 0, 121, 0, 122, 0, 125, 379, 0, 0,
	0, 293, 0, 0, 238, 241, 244, 290, 0, 356,
	0, 112, 0, 0, 160, 0, -2, 186, 379, 0,
	183, 246, 0, 185, 251, 0, 0, 0, 303, 0,
	437, 439, 440, 0, 0, 0, 465, 467, 0, 0,
	0, -2, 404, 397, 0, 485, 486, 0, 488, 480,
	481, 482, 0, 484, 373, 438, 389, 0, 390, 454,
	0, 0, 453, 455, 186, 0, 112, 490, 493, 0,
	217, 219, 170, 224, 225, 0, 227, 228, 229, 446,
	0, 112, 237, 403, 98, 0, 0, 111, 114, 119,
	0, 0, 289, 0, 139, 207, 128, 0, 0, 295,
	142, 202, 202, 355, 0, 167, 0, -2, 0, 0,
	463, 154, 196, 128, 164, -2, 0, 379, 0, 187,
	272, 246, 0, 0, 0, 0, 209, 128, 460, 0,
	301, -2, 463, 473, 479, 487, 0, 457, 451, 452,
	379, 489, 497, 230, 223, 172, 171, 226, 233, 235,
	111, 116, 0, 0, 112, 120, 111, 135, 0, 0,
	293, 0, 202, 0, 202, 151, 0, 0, -2, 463,
	0, 0, 156, 0, 0, 0, 382, 0, 246, 180,
	245, 223, 0, 0, -2, 271, 274, 276, 277, 278,
	279, 280, 281, 272, 252, 210, 128, 216, -2, 300,
	0, 0, 0, 379, 0, 220, 0, 173, 0, 112,
	111, 109, 113, 0, 0, 140, 0, 198, 0, 0,
	0, 0, 0, 152, 194, 128, 0, -2, 0, -2,
	0, 0, 128, 230, 230, 0, 246, 272, 0, 0,
	380, 0, 275, 181, -2, 472, 483, 246, 0, 231,
	221, 107, 115, 0, 110, 208, 0, 0, 128, 205,
	206, 199, 200, 0, 0, 0, 190, 197, 0, 162,
	0, 0, 0, 0, 272, 175, 0, 283, 379, 0,
	287, 0, 0, 249, 253, 0, 272, 0, 0, 108,
	141, 192, 128, 128, -2, 201, 0, 153, 0, 0,
	165, 128, 128, 0, 385, 386, 0, 174, 247, 0,
	284, 0, 248, 0, 0, 379, 254, 0, 256, 0,
	0, 266, 0, 0, 265, -2, 297, 378, 222, 0,
	-2, 195, 0, 163, 0, 0, 383, 0, 387, 282,
	379, 286, 379, 0, 255, 257, 258, 259, 0, 0,
	0, 0, 128, 169, 377, 384, 285, 288, -2, 260,
	261, 262, 264, 267, 193, 0, 0, 263, 161, 230,
	0, 250, 268, 128, 0, 269,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 162, 148, 3, 165, 172, 159, 3,
	154, 155, 170, 161, 166, 160, 175, 171, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 153, 152,
	173, 168, 174, 158, 164, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 156, 3, 157, 169, 3, 149, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 150, 167, 151, 163,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147,
}

var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:290
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:332
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:338
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:345
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.NamePart{
						Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						StringTkn: yyDollar[1].token,
						Value:     yyDollar[1].token.Value,
					},
				},
			}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:357
		{
			name := yylex.(*Parser).parseNameToken(yyDollar[1].token)

			yyVAL.node = &ParserSeparatedList{
				Items:         name.Parts,
				SeparatorTkns: name.SeparatorTkns,
			}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:369
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.NamePart{
						Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						StringTkn: yyDollar[1].token,
						Value:     yyDollar[1].token.Value,
					},
				},
			}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:381
		{
			name := yylex.(*Parser).parseNameToken(yyDollar[1].token)

			yyVAL.node = &ParserSeparatedList{
				Items:         name.Parts,
				SeparatorTkns: name.SeparatorTkns,
			}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:393
		{
			yyVAL.node = &ast.Name{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Parts: []ast.Vertex{
					&ast.NamePart{
						Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						StringTkn: yyDollar[1].token,
						Value:     yyDollar[1].token.Value,
					},
				},
			}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:406
		{
			name := yylex.(*Parser).parseNameToken(yyDollar[1].token)

			yyVAL.node = &ast.Name{
				Position:      name.Position,
				Parts:         name.Parts,
				SeparatorTkns: name.SeparatorTkns,
			}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:416
		{
			name := yylex.(*Parser).parseNameToken(yyDollar[1].token)

			yyVAL.node = &ast.NameFullyQualified{
				Position:       name.Position,
				NsSeparatorTkn: name.NsSeparatorTkn,
				Parts:          name.Parts,
				SeparatorTkns:  name.SeparatorTkns,
			}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:427
		{
			yyVAL.node = yylex.(*Parser).parseNameToken(yyDollar[1].token)
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:434
		{
			// error
			yyVAL.node = nil
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:439
		{
			yyVAL.node = yyDollar[1].node
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:443
		{
			yyVAL.node = yyDollar[1].node
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:447
		{
			yyVAL.node = yyDollar[1].node
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:451
		{
			yyVAL.node = yyDollar[1].node
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:455
		{
			yyVAL.node = yyDollar[1].node
		}
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:459
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:469
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:482
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Stmts:                yyDollar[4].list,
				CloseCurlyBracketTkn: yyDollar[5].token,
			}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:497
		{
			yyVAL.node = &ast.StmtNamespace{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				NsTkn:                yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:507
		{
			use := yyDollar[2].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)
			use.UseTkn = yyDollar[1].token
			use.SemiColonTkn = yyDollar[3].token

			yyVAL.node = yyDollar[2].node
		}
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:517
		{
			use := yyDollar[3].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			use.UseTkn = yyDollar[1].token
			use.Type = yyDollar[2].node
			use.SemiColonTkn = yyDollar[4].token

			yyVAL.node = yyDollar[3].node
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:528
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				UseTkn:        yyDollar[1].token,
				Uses:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:538
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				UseTkn:        yyDollar[1].token,
				Type:          yyDollar[2].node,
				Uses:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:549
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:562
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:570
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 107:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:581
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 108:
		yyDollar = yyS[yypt-7 : yypt+1]
// line internal/php8/php8.y:601
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 109:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:625
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 110:
		yyDollar = yyS[yypt-7 : yypt+1]
// line internal/php8/php8.y:645
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:669
		{
			yyVAL.token = nil
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:673
		{
			yyVAL.token = yyDollar[1].token
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:680
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:687
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:696
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:703
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:712
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:719
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:728
		{
			yyVAL.node = yyDollar[1].node
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:732
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yyDollar[1].node
			decl.Position = yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:743
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
			}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:754
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].token),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				AsTkn: yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:774
		{
			yyVAL.node = yyDollar[1].node
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:778
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.NsSeparatorTkn = yyDollar[1].token
			decl.Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:789
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:796
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:805
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:811
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:818
		{
			// error
			yyVAL.node = nil
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:823
		{
			yyVAL.node = yyDollar[1].node
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:827
		{
			yyVAL.node = yyDollar[1].node
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:831
		{
			yyVAL.node = yyDollar[1].node
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:835
		{
			yyVAL.node = yyDollar[1].node
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:839
		{
			yyVAL.node = yyDollar[1].node
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:843
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:855
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:864
		{
			yyVAL.node = yyDollar[1].node
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:868
		{
			yyVAL.node = yyDollar[1].node
		}
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:872
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 140:
		yyDollar = yyS[yypt-7 : yypt+1]
// line internal/php8/php8.y:882
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php8/php8.y:895
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:912
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:922
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:931
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:940
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:949
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:957
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:965
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:973
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:981
		{
			yyVAL.node = &ast.StmtExpression{
				Position:     yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Expr:         yyDollar[1].node,
				SemiColonTkn: yyDollar[2].token,
			}
		}
	case 151:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:989
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
// line internal/php8/php8.y:1002
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 153:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php8/php8.y:1021
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 154:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:1042
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1053
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:1060
		{
			pos := yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list)
			if yyDollar[6].node != nil {
				pos = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.StmtTry{
				Position:             pos,
				TryTkn:               yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
				Catches:              yyDollar[5].list,
				Finally:              yyDollar[6].node,
			}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1077
		{
			yyVAL.node = &ast.StmtThrow{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ThrowTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1086
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1099
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1113
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php8/php8.y:1117
		{
			catch := yyDollar[4].node.(*ast.StmtCatch)
			catch.CatchTkn = yyDollar[2].token
			catch.OpenParenthesisTkn = yyDollar[3].token
			catch.Var = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[5].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[5].token),
					IdentifierTkn: yyDollar[5].token,
					Value:         yyDollar[5].token.Value,
				},
			}
			catch.CloseParenthesisTkn = yyDollar[6].token
			catch.OpenCurlyBracketTkn = yyDollar[7].token
			catch.Stmts = yyDollar[8].list
			catch.CloseCurlyBracketTkn = yyDollar[9].token
			catch.Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[2].token, yyDollar[9].token)

			yyVAL.list = append(yyDollar[1].list, catch)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1140
		{
			yyVAL.node = &ast.StmtCatch{
				Types: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1146
		{
			yyDollar[1].node.(*ast.StmtCatch).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtCatch).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.StmtCatch).Types = append(yyDollar[1].node.(*ast.StmtCatch).Types, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1156
		{
			yyVAL.node = nil
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1160
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1173
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1179
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1189
		{
			yyVAL.node = yyDollar[1].node
		}
	case 169:
		yyDollar = yyS[yypt-11 : yypt+1]
// line internal/php8/php8.y:1196
		{
			yyVAL.node = &ast.StmtFunction{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[11].token),
				FunctionTkn:  yyDollar[1].token,
				AmpersandTkn: yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenParenthesisTkn:   yyDollar[5].token,
				Params:               yyDollar[6].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[6].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[7].token,
				ColonTkn:             yyDollar[8].node.(*ReturnType).ColonTkn,
				ReturnType:           yyDollar[8].node.(*ReturnType).Type,
				OpenCurlyBracketTkn:  yyDollar[9].token,
				Stmts:                yyDollar[10].list,
				CloseCurlyBracketTkn: yyDollar[11].token,
			}
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1221
		{
			yyVAL.token = nil
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1225
		{
			yyVAL.token = yyDollar[1].token
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1232
		{
			yyVAL.token = nil
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1236
		{
			yyVAL.token = yyDollar[1].token
		}
	case 174:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php8/php8.y:1243
		{
			class := &ast.StmtClass{
				Position:  yylex.(*Parser).builder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[9].token),
				Modifiers: yyDollar[1].list,
				ClassTkn:  yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[7].token,
				Stmts:                yyDollar[8].list,
				CloseCurlyBracketTkn: yyDollar[9].token,
			}

			if yyDollar[4].node != nil {
				class.ExtendsTkn = yyDollar[4].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[4].node.(*ast.StmtClass).Extends
			}

			if yyDollar[5].node != nil {
				class.ImplementsTkn = yyDollar[5].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[5].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[5].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 175:
		yyDollar = yyS[yypt-8 : yypt+1]
// line internal/php8/php8.y:1272
		{
			class := &ast.StmtClass{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1303
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1307
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1314
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1322
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 180:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:1333
		{
			yyVAL.node = &ast.StmtTrait{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token),
				TraitTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Stmts:                yyDollar[5].list,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 181:
		yyDollar = yyS[yypt-7 : yypt+1]
// line internal/php8/php8.y:1351
		{
			iface := &ast.StmtInterface{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				InterfaceTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[5].token,
				Stmts:                yyDollar[6].list,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}

			if yyDollar[3].node != nil {
				iface.ExtendsTkn = yyDollar[3].node.(*ast.StmtInterface).ExtendsTkn
				iface.Extends = yyDollar[3].node.(*ast.StmtInterface).Extends
				iface.ExtendsSeparatorTkns = yyDollar[3].node.(*ast.StmtInterface).ExtendsSeparatorTkns
			}

			yyVAL.node = iface
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1377
		{
			yyVAL.node = nil
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1381
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1392
		{
			yyVAL.node = nil
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1396
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1408
		{
			yyVAL.node = nil
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1412
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1424
		{
			yyVAL.node = yyDollar[1].node
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1428
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1436
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1447
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1460
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1467
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1483
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1490
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1506
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1513
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1529
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1538
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1548
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:1558
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1572
		{
			yyVAL.list = nil
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:1576
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1586
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1598
		{
			yyVAL.token = yyDollar[1].token
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1602
		{
			yyVAL.token = yyDollar[1].token
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1609
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1616
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:1632
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 210:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:1643
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1661
		{
			yyVAL.node = yyDollar[1].node
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1665
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:1680
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
// line internal/php8/php8.y:1695
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1715
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 216:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:1723
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1743
		{
			yyVAL.node = yyDollar[1].node
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1747
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1754
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1760
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1770
		{
			pos := yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.NewTokensPosition(yyDollar[2].token, yyDollar[4].token)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
			}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:1796
		{
			pos := yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[3].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
				EqualTkn:     yyDollar[5].token,
				DefaultValue: yyDollar[6].node,
			}
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1827
		{
			yyVAL.node = nil
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1831
		{
			yyVAL.node = yyDollar[1].node
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1838
		{
			yyVAL.node = yyDollar[1].node
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1842
		{
			yyVAL.node = &ast.Nullable{
				Position:    yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				QuestionTkn: yyDollar[1].token,
				Expr:        yyDollar[2].node,
			}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1853
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1861
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1869
		{
			yyVAL.node = yyDollar[1].node
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1876
		{
			yyVAL.node = &ReturnType{}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1880
		{
			yyVAL.node = &ReturnType{
				ColonTkn: yyDollar[1].token,
				Type:     yyDollar[2].node,
			}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1890
		{
			yyVAL.node = &ArgumentList{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1898
		{
			argumentList := yyDollar[2].node.(*ArgumentList)
			argumentList.Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			if yyDollar[3].token != nil {
				argumentList.SeparatorTkns = append(argumentList.SeparatorTkns, yyDollar[3].token)
			}
			argumentList.CloseParenthesisTkn = yyDollar[4].token

			yyVAL.node = argumentList
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1913
		{
			yyVAL.node = &ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1919
		{
			yyDollar[1].node.(*ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ArgumentList).Arguments = append(yyDollar[1].node.(*ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1929
		{
			yyVAL.node = &ast.Argument{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Expr:     yyDollar[1].node,
			}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1936
		{
			yyVAL.node = &ast.Argument{
				Position:    yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				VariadicTkn: yyDollar[1].token,
				Expr:        yyDollar[2].node,
			}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1947
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1954
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1963
		{
			yyVAL.node = yyDollar[1].node
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1970
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1977
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1986
		{

			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2001
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2020
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:2024
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2031
		{
			yyVAL.node = &ast.StmtPropertyList{
				Position:      yylex.(*Parser).builder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				Type:          yyDollar[2].node,
				Props:         yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2042
		{
			yyVAL.node = &ast.StmtClassConstList{
				Position:      yylex.(*Parser).builder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				ConstTkn:      yyDollar[2].token,
				Consts:        yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2053
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 250:
		yyDollar = yyS[yypt-10 : yypt+1]
// line internal/php8/php8.y:2073
		{
			pos := yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[2].token, yyDollar[10].node)
			if yyDollar[1].list != nil {
				pos = yylex.(*Parser).builder.NewNodeListNodePosition(yyDollar[1].list, yyDollar[10].node)
			}

			yyVAL.node = &ast.StmtClassMethod{
				Position:     pos,
				Modifiers:    yyDollar[1].list,
				FunctionTkn:  yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
				OpenParenthesisTkn:  yyDollar[6].token,
				Params:              yyDollar[7].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[8].token,
				ColonTkn:            yyDollar[9].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[9].node.(*ReturnType).Type,
				Stmt:                yyDollar[10].node,
			}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2102
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2108
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2118
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2125
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2133
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2145
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2149
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2156
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2162
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2171
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2186
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2201
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2216
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2232
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2246
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2257
		{
			yyVAL.node = yyDollar[1].node
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2264
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2280
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2287
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2299
		{
			yyVAL.list = yyDollar[1].list
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2303
		{
			yyVAL.list = []ast.Vertex{
				&ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:2316
		{
			yyVAL.list = nil
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2320
		{
			yyVAL.list = yyDollar[1].list
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2327
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2331
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2338
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2346
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2354
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2362
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2370
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2378
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2389
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2396
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2405
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2420
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2439
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2446
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2455
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2471
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2487
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2494
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2503
		{
			yyVAL.node = yyDollar[1].node
		}
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:2510
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2514
		{
			yyVAL.node = yyDollar[1].node
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2521
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2528
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 297:
		yyDollar = yyS[yypt-8 : yypt+1]
// line internal/php8/php8.y:2537
		{
			if yyDollar[2].node == nil {
				yyDollar[2].node = &ArgumentList{}
			}

			class := &ast.StmtClass{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn:             yyDollar[1].token,
				OpenParenthesisTkn:   yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                 yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:        yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2571
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2591
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 300:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:2602
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:2618
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2633
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2642
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2652
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2660
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2669
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2678
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2687
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2696
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2705
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2714
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2723
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2732
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2741
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2750
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2759
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2768
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2777
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2785
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2793
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2801
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2809
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2818
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2827
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2836
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2845
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2854
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2863
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2872
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2881
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2890
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2899
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2908
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2917
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2926
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2935
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2944
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2953
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2962
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2970
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2978
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2986
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2994
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3003
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3012
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3021
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3030
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3039
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3048
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3057
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3066
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3075
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3084
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3093
		{
			yyVAL.node = yyDollar[1].node
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:3097
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3108
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3118
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3127
		{
			yyVAL.node = yyDollar[1].node
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3131
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3139
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3147
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3155
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3163
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3171
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3179
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3187
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3204
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3212
		{
			yyVAL.node = yyDollar[1].node
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3216
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3225
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3233
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3240
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3248
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3258
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3266
		{
			yyVAL.node = yyDollar[1].node
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3270
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 377:
		yyDollar = yyS[yypt-11 : yypt+1]
// line internal/php8/php8.y:3286
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 378:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php8/php8.y:3305
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:3328
		{
			yyVAL.token = nil
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3332
		{
			yyVAL.token = yyDollar[1].token
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:3339
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3343
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3356
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3363
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3372
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3386
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3404
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3415
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3436
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3457
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3471
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3479
		{
			yyVAL.node = yyDollar[1].node
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3486
		{
			yyVAL.node = yyDollar[1].node
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3490
		{
			yyVAL.node = yyDollar[1].node
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:3497
		{
			yyVAL.node = nil
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3501
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:3513
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3517
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3527
		{
			yyVAL.list = yyDollar[1].list
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:3534
		{
			yyVAL.node = nil
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3538
		{
			yyVAL.node = yyDollar[1].node
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3545
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3556
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3566
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3577
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3585
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3593
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3601
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3609
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3617
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3625
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3633
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3641
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3649
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3657
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3672
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3680
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3689
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3698
		{
			yyVAL.node = yyDollar[1].node
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3702
		{
			yyVAL.node = yyDollar[1].node
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3709
		{
			yyVAL.node = &ast.ExprConstFetch{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Const:    yyDollar[1].node,
			}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3716
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3729
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3745
		{
			yyVAL.node = yyDollar[1].node
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3749
		{
			yyVAL.node = yyDollar[1].node
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:3756
		{
			yyVAL.node = nil
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3760
		{
			yyVAL.node = yyDollar[1].node
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3767
		{
			yyVAL.node = yyDollar[1].node
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3774
		{
			yyVAL.node = yyDollar[1].node
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3778
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3787
		{
			yyVAL.node = yyDollar[1].node
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3794
		{
			yyVAL.node = yyDollar[1].node
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3798
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3807
		{
			yyVAL.node = yyDollar[1].node
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3814
		{
			yyVAL.node = yyDollar[1].node
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3818
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3828
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3838
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3848
		{
			methodCall := &ast.ExprMethodCall{
				Position:            yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:                 yyDollar[1].node,
				ObjectOperatorTkn:   yyDollar[2].token,
				Method:              yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				methodCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				methodCall.Method = brackets.Child
				methodCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = methodCall
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3869
		{
			yyVAL.node = yyDollar[1].node
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3876
		{
			yyVAL.node = yyDollar[1].node
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3880
		{
			yyVAL.node = yyDollar[1].node
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3884
		{
			propertyFetch := &ast.ExprPropertyFetch{
				Position:          yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:               yyDollar[1].node,
				ObjectOperatorTkn: yyDollar[2].token,
				Prop:              yyDollar[3].node,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				propertyFetch.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				propertyFetch.Prop = brackets.Child
				propertyFetch.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = propertyFetch
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3904
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3915
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3925
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3936
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3945
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3957
		{
			yyVAL.node = yyDollar[1].node
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3961
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3971
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3981
		{
			propertyFetch := &ast.ExprPropertyFetch{
				Position:          yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:               yyDollar[1].node,
				ObjectOperatorTkn: yyDollar[2].token,
				Prop:              yyDollar[3].node,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				propertyFetch.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				propertyFetch.Prop = brackets.Child
				propertyFetch.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = propertyFetch
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3998
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4007
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4019
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4027
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4036
		{
			yyVAL.node = yyDollar[1].node
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4043
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4051
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4060
		{
			yyVAL.node = yyDollar[1].node
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4067
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:4081
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4085
		{
			yyVAL.node = yyDollar[1].node
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4092
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4099
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4108
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4117
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:4124
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4134
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4142
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:4150
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:4166
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4183
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4187
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4198
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4202
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4216
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:4227
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4244
		{
			yyVAL.node = &ast.ExprPropertyFetch{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				ObjectOperatorTkn: yyDollar[2].token,
				Prop: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4264
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4273
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 483:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:4286
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4302
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4314
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4322
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4339
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4363
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:4377
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:4392
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4402
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4410
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:4418
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4428
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4436
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4447
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4453
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4463
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
