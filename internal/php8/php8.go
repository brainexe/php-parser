// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:2
package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:2

import (
	"strconv"

	"github.com/z7zmey/php-parser/pkg/ast"
	"github.com/z7zmey/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_MATCH = 57484
const T_ATTRIBUTE = 57485
const T_NULLSAFE_OBJECT_OPERATOR = 57486
const T_NAME_RELATIVE = 57487
const T_NAME_QUALIFIED = 57488
const T_NAME_FULLY_QUALIFIED = 57489

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_MATCH",
	"T_ATTRIBUTE",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_NAME_RELATIVE",
	"T_NAME_QUALIFIED",
	"T_NAME_FULLY_QUALIFIED",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:4572

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 42,
	58, 439,
	79, 439,
	150, 439,
	156, 439,
	-2, 434,
	-1, 51,
	154, 442,
	-2, 451,
	-1, 87,
	58, 441,
	79, 441,
	150, 441,
	154, 444,
	156, 441,
	-2, 429,
	-1, 113,
	79, 402,
	-2, 431,
	-1, 328,
	58, 439,
	79, 439,
	150, 439,
	156, 439,
	-2, 328,
	-1, 331,
	154, 444,
	-2, 441,
	-1, 333,
	58, 439,
	79, 439,
	150, 439,
	156, 439,
	-2, 330,
	-1, 447,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 352,
	-1, 448,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 353,
	-1, 449,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 354,
	-1, 450,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 355,
	-1, 451,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 356,
	-1, 452,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 357,
	-1, 453,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 358,
	-1, 454,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 359,
	-1, 455,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 360,
	-1, 462,
	155, 177,
	166, 177,
	-2, 439,
	-1, 510,
	155, 479,
	157, 479,
	166, 479,
	-2, 439,
	-1, 515,
	58, 440,
	79, 440,
	150, 440,
	154, 443,
	156, 440,
	-2, 362,
	-1, 529,
	154, 465,
	-2, 432,
	-1, 530,
	154, 467,
	-2, 457,
	-1, 533,
	154, 465,
	-2, 433,
	-1, 534,
	154, 467,
	-2, 458,
	-1, 551,
	155, 227,
	-2, 232,
	-1, 595,
	155, 227,
	-2, 232,
	-1, 618,
	154, 443,
	-2, 440,
	-1, 682,
	155, 197,
	-2, 439,
	-1, 693,
	155, 227,
	-2, 232,
	-1, 706,
	155, 478,
	157, 478,
	166, 478,
	-2, 439,
	-1, 741,
	155, 198,
	-2, 439,
	-1, 760,
	37, 282,
	39, 282,
	-2, 279,
	-1, 771,
	94, 222,
	95, 222,
	96, 222,
	-2, 0,
	-1, 798,
	155, 197,
	-2, 439,
	-1, 800,
	155, 200,
	-2, 413,
	-1, 804,
	94, 223,
	95, 223,
	96, 223,
	-2, 0,
	-1, 862,
	31, 213,
	32, 213,
	33, 213,
	151, 213,
	-2, 0,
	-1, 893,
	79, 88,
	-2, 78,
	-1, 898,
	31, 212,
	32, 212,
	33, 212,
	151, 212,
	-2, 0,
	-1, 926,
	155, 227,
	-2, 232,
}

const yyPrivate = 57344

const yyLast = 8231

var yyAct = [...]int{
	26, 222, 776, 646, 850, 872, 762, 886, 602, 849,
	846, 130, 794, 827, 126, 698, 649, 489, 302, 650,
	229, 229, 229, 681, 215, 243, 416, 664, 319, 409,
	648, 497, 5, 278, 555, 651, 544, 461, 491, 83,
	734, 113, 597, 321, 502, 410, 224, 87, 6, 411,
	536, 85, 7, 121, 42, 242, 323, 327, 310, 239,
	334, 335, 336, 337, 338, 235, 39, 339, 340, 341,
	342, 343, 344, 345, 120, 348, 2, 535, 356, 357,
	358, 212, 220, 528, 352, 362, 228, 80, 882, 879,
	219, 313, 370, 371, 208, 373, 374, 329, 329, 402,
	209, 311, 857, 704, 612, 331, 331, 232, 233, 427,
	213, 238, 328, 333, 405, 904, 700, 866, 588, 782,
	82, 854, 728, 853, 880, 876, 905, 380, 563, 404,
	313, 300, 301, 247, 249, 248, 271, 700, 881, 877,
	364, 387, 397, 236, 287, 288, 289, 290, 291, 292,
	293, 294, 295, 296, 297, 298, 299, 271, 428, 425,
	273, 270, 719, 658, 383, 385, 503, 111, 111, 643,
	586, 111, 429, 426, 423, 403, 245, 246, 257, 260,
	261, 262, 263, 264, 265, 267, 269, 396, 424, 404,
	577, 508, 873, 496, 286, 303, 721, 829, 828, 257,
	800, 397, 391, 272, 251, 255, 254, 713, 622, 367,
	625, 623, 250, 709, 252, 256, 258, 259, 266, 268,
	253, 632, 619, 359, 413, 628, 759, 418, 419, 761,
	629, 937, 607, 382, 605, 507, 256, 258, 259, 900,
	835, 401, 317, 522, 415, 834, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 867, 457, 459, 825, 463, 816, 805, 465,
	766, 767, 768, 765, 764, 763, 752, 473, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 739, 394, 723, 718, 381, 504, 213, 395, 716,
	932, 926, 469, 313, 329, 499, 229, 501, 238, 323,
	112, 112, 331, 364, 112, 493, 511, 708, 540, 462,
	679, 513, 894, 323, 316, 829, 828, 668, 271, 874,
	315, 521, 759, 660, 620, 761, 611, 506, 229, 541,
	388, 842, 822, 802, 742, 523, 707, 456, 624, 693,
	229, 514, 498, 384, 329, 529, 533, 464, 676, 545,
	546, 677, 331, 547, 595, 575, 573, 551, 512, 510,
	257, 231, 552, 111, 470, 556, 468, 323, 386, 372,
	369, 368, 367, 347, 318, 329, 766, 767, 768, 765,
	764, 763, 500, 331, 314, 276, 571, 255, 254, 275,
	525, 274, 227, 226, 223, 558, 123, 256, 258, 259,
	539, 5, 253, 941, 366, 940, 538, 777, 581, 749,
	243, 472, 231, 280, 516, 518, 519, 6, 505, 915,
	390, 7, 389, 914, 542, 532, 527, 899, 875, 920,
	863, 789, 790, 789, 790, 836, 831, 572, 824, 584,
	518, 786, 519, 519, 518, 750, 738, 560, 737, 590,
	312, 591, 735, 733, 592, 593, 730, 576, 120, 565,
	271, 530, 534, 653, 654, 582, 580, 570, 562, 559,
	579, 471, 585, 467, 422, 421, 420, 213, 566, 392,
	817, 783, 630, 870, 869, 610, 594, 818, 808, 323,
	614, 803, 601, 323, 754, 217, 119, 117, 118, 699,
	662, 517, 257, 260, 261, 600, 567, 631, 277, 596,
	353, 217, 634, 257, 599, 520, 112, 603, 313, 229,
	638, 617, 210, 780, 211, 236, 231, 918, 311, 255,
	254, 598, 613, 609, 304, 604, 537, 351, 659, 256,
	258, 259, 399, 271, 253, 231, 361, 119, 117, 118,
	830, 360, 788, 492, 231, 642, 672, 418, 674, 633,
	652, 641, 856, 635, 678, 639, 657, 740, 216, 667,
	5, 399, 665, 655, 217, 354, 355, 653, 654, 694,
	495, 109, 110, 673, 670, 257, 6, 697, 281, 282,
	7, 916, 807, 705, 917, 696, 564, 399, 687, 746,
	747, 210, 81, 211, 680, 637, 329, 329, 225, 108,
	711, 283, 285, 284, 331, 331, 701, 655, 400, 695,
	603, 462, 682, 414, 545, 398, 240, 812, 231, 811,
	111, 218, 214, 710, 312, 329, 217, 626, 636, 556,
	353, 505, 640, 331, 377, 378, 550, 218, 305, 847,
	706, 225, 108, 731, 353, 906, 821, 231, 240, 111,
	717, 119, 117, 118, 715, 116, 323, 726, 722, 221,
	744, 729, 666, 724, 655, 727, 569, 751, 568, 488,
	119, 117, 118, 207, 771, 772, 490, 353, 323, 119,
	117, 118, 520, 753, 743, 769, 308, 307, 736, 306,
	748, 279, 1, 329, 548, 354, 355, 684, 115, 216,
	218, 331, 45, 775, 418, 655, 773, 312, 741, 354,
	355, 760, 770, 323, 766, 767, 768, 765, 764, 763,
	778, 804, 757, 665, 758, 885, 784, 781, 689, 349,
	787, 655, 309, 806, 797, 494, 312, 814, 813, 795,
	809, 799, 354, 355, 810, 460, 791, 353, 793, 669,
	329, 858, 520, 119, 117, 118, 939, 675, 331, 852,
	826, 322, 218, 214, 819, 798, 41, 820, 833, 655,
	124, 603, 663, 112, 725, 839, 40, 823, 840, 841,
	353, 848, 119, 117, 118, 375, 832, 789, 790, 655,
	543, 330, 871, 685, 843, 14, 683, 845, 554, 862,
	13, 851, 112, 837, 855, 271, 122, 792, 789, 790,
	861, 549, 354, 355, 838, 241, 621, 865, 365, 52,
	51, 114, 46, 47, 48, 859, 883, 895, 896, 892,
	53, 86, 897, 898, 795, 878, 84, 75, 353, 346,
	320, 902, 903, 379, 376, 354, 355, 257, 260, 261,
	908, 65, 363, 910, 267, 269, 64, 890, 907, 889,
	892, 909, 888, 913, 887, 756, 891, 237, 234, 109,
	110, 911, 43, 745, 255, 254, 686, 647, 353, 901,
	417, 923, 406, 350, 256, 258, 259, 266, 268, 253,
	206, 393, 933, 931, 930, 927, 924, 891, 925, 929,
	934, 38, 37, 354, 355, 935, 36, 35, 3, 129,
	938, 779, 49, 942, 4, 720, 91, 92, 73, 50,
	96, 97, 34, 0, 111, 0, 25, 0, 603, 0,
	116, 24, 16, 15, 0, 17, 0, 28, 655, 29,
	0, 0, 18, 354, 355, 0, 19, 20, 33, 44,
	108, 11, 21, 31, 0, 0, 32, 10, 0, 22,
	0, 27, 89, 90, 8, 46, 47, 48, 0, 0,
	0, 0, 54, 115, 0, 105, 101, 102, 103, 98,
	99, 759, 0, 0, 761, 0, 0, 106, 0, 0,
	0, 0, 9, 104, 100, 0, 0, 93, 94, 95,
	0, 0, 0, 0, 88, 56, 0, 0, 0, 77,
	78, 23, 109, 110, 0, 0, 0, 57, 58, 79,
	66, 67, 68, 69, 70, 71, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 766, 767, 768, 765, 764,
	763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 119, 117, 118,
	107, 76, 12, 661, 30, 0, 63, 0, 55, 0,
	0, 0, 60, 59, 61, 62, 74, 112, 4, 0,
	91, 92, 73, 50, 96, 97, 34, 844, 111, 0,
	25, 0, 0, 0, 116, 24, 16, 15, 0, 17,
	0, 28, 0, 29, 0, 0, 18, 0, 0, 0,
	19, 20, 33, 44, 108, 11, 21, 31, 0, 0,
	32, 10, 0, 22, 0, 27, 89, 90, 8, 46,
	47, 48, 0, 0, 0, 0, 54, 115, 0, 105,
	101, 102, 103, 98, 99, 759, 0, 0, 761, 0,
	0, 106, 0, 0, 0, 0, 9, 104, 100, 0,
	0, 93, 94, 95, 0, 0, 0, 0, 88, 56,
	0, 0, 0, 77, 78, 23, 109, 110, 0, 0,
	0, 57, 58, 79, 66, 67, 68, 69, 70, 71,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 766,
	767, 768, 765, 764, 763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	0, 119, 117, 118, 107, 76, 12, 561, 30, 0,
	63, 0, 55, 0, 0, 0, 60, 59, 61, 62,
	74, 112, 4, 0, 91, 92, 73, 50, 96, 97,
	34, 815, 111, 0, 25, 0, 0, 0, 116, 24,
	16, 15, 0, 17, 0, 28, 0, 29, 0, 0,
	18, 0, 0, 0, 19, 20, 33, 44, 108, 11,
	21, 31, 0, 0, 32, 10, 0, 22, 0, 27,
	89, 90, 8, 46, 47, 48, 0, 0, 0, 0,
	54, 115, 0, 105, 101, 102, 103, 98, 99, 759,
	0, 0, 761, 0, 0, 106, 0, 0, 0, 0,
	9, 104, 100, 0, 0, 93, 94, 95, 0, 0,
	0, 0, 88, 56, 0, 0, 0, 77, 78, 23,
	109, 110, 0, 0, 0, 57, 58, 79, 66, 67,
	68, 69, 70, 71, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 766, 767, 768, 765, 764, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 0, 119, 117, 118, 107, 76,
	12, 0, 30, 0, 63, 0, 55, 0, 0, 0,
	60, 59, 61, 62, 74, 112, 408, 0, 91, 92,
	73, 50, 96, 97, 34, 755, 111, 0, 25, 0,
	0, 0, 116, 24, 16, 15, 0, 17, 0, 28,
	0, 29, 0, 0, 18, 0, 0, 0, 19, 20,
	33, 44, 108, 0, 21, 31, 0, 0, 32, 0,
	0, 22, 0, 27, 89, 90, 412, 46, 47, 48,
	0, 0, 0, 0, 54, 115, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 104, 100, 0, 0, 93,
	94, 95, 0, 0, 0, 0, 88, 56, 0, 0,
	0, 77, 78, 23, 109, 110, 0, 0, 0, 57,
	58, 79, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 0, 119,
	117, 118, 107, 76, 12, 943, 30, 0, 63, 0,
	55, 0, 0, 0, 60, 59, 61, 62, 74, 112,
	408, 0, 91, 92, 73, 50, 96, 97, 34, 0,
	111, 0, 25, 0, 0, 0, 116, 24, 16, 15,
	0, 17, 0, 28, 0, 29, 0, 0, 18, 0,
	0, 0, 19, 20, 33, 44, 108, 0, 21, 31,
	0, 0, 32, 0, 0, 22, 0, 27, 89, 90,
	412, 46, 47, 48, 0, 0, 0, 0, 54, 115,
	0, 105, 101, 102, 103, 98, 99, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 104,
	100, 0, 0, 93, 94, 95, 0, 0, 0, 0,
	88, 56, 0, 0, 0, 77, 78, 23, 109, 110,
	0, 0, 0, 57, 58, 79, 66, 67, 68, 69,
	70, 71, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 0, 119, 117, 118, 107, 76, 12, 936,
	30, 0, 63, 0, 55, 0, 0, 0, 60, 59,
	61, 62, 74, 112, 408, 0, 91, 92, 73, 50,
	96, 97, 34, 0, 111, 0, 25, 0, 0, 0,
	116, 24, 16, 15, 0, 17, 0, 28, 0, 29,
	0, 0, 18, 0, 0, 0, 19, 20, 33, 44,
	108, 0, 21, 31, 0, 0, 32, 0, 0, 22,
	0, 27, 89, 90, 412, 46, 47, 48, 0, 0,
	0, 0, 54, 115, 0, 105, 101, 102, 103, 98,
	99, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 104, 100, 0, 0, 93, 94, 95,
	0, 0, 0, 0, 88, 56, 0, 0, 0, 77,
	78, 23, 109, 110, 0, 0, 0, 57, 58, 79,
	66, 67, 68, 69, 70, 71, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 119, 117, 118,
	107, 76, 12, 922, 30, 0, 63, 0, 55, 0,
	0, 0, 60, 59, 61, 62, 74, 112, 408, 0,
	91, 92, 73, 50, 96, 97, 34, 0, 111, 0,
	25, 0, 0, 0, 116, 24, 16, 15, 0, 17,
	0, 28, 0, 29, 0, 0, 18, 0, 0, 0,
	19, 20, 33, 44, 108, 0, 21, 31, 0, 0,
	32, 0, 0, 22, 0, 27, 89, 90, 412, 46,
	47, 48, 0, 0, 0, 0, 54, 115, 0, 105,
	101, 102, 103, 98, 99, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 104, 100, 0,
	0, 93, 94, 95, 0, 0, 0, 0, 88, 56,
	0, 0, 0, 77, 78, 23, 109, 110, 0, 0,
	0, 57, 58, 79, 66, 67, 68, 69, 70, 71,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	0, 119, 117, 118, 107, 76, 12, 921, 30, 0,
	63, 0, 55, 0, 0, 0, 60, 59, 61, 62,
	74, 112, 408, 0, 91, 92, 73, 50, 96, 97,
	34, 0, 111, 0, 25, 0, 0, 0, 116, 24,
	16, 15, 0, 17, 919, 28, 0, 29, 0, 0,
	18, 0, 0, 0, 19, 20, 33, 44, 108, 0,
	21, 31, 0, 0, 32, 0, 0, 22, 0, 27,
	89, 90, 412, 46, 47, 48, 0, 0, 0, 0,
	54, 115, 0, 105, 101, 102, 103, 98, 99, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	0, 104, 100, 0, 0, 93, 94, 95, 0, 0,
	0, 0, 88, 56, 0, 0, 0, 77, 78, 23,
	109, 110, 0, 0, 0, 57, 58, 79, 66, 67,
	68, 69, 70, 71, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 0, 119, 117, 118, 107, 76,
	12, 0, 30, 0, 63, 0, 55, 0, 0, 0,
	60, 59, 61, 62, 74, 112, 408, 0, 91, 92,
	73, 50, 96, 97, 34, 0, 111, 0, 25, 0,
	0, 0, 116, 24, 16, 15, 0, 17, 0, 28,
	0, 29, 0, 0, 18, 0, 0, 0, 19, 20,
	33, 44, 108, 0, 21, 31, 0, 0, 32, 0,
	0, 22, 0, 27, 89, 90, 412, 46, 47, 48,
	0, 0, 0, 0, 54, 115, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 104, 100, 0, 0, 93,
	94, 95, 0, 0, 0, 0, 88, 56, 0, 0,
	0, 77, 78, 23, 109, 110, 0, 0, 0, 57,
	58, 79, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 0, 119,
	117, 118, 107, 76, 12, 868, 30, 0, 63, 0,
	55, 0, 0, 0, 60, 59, 61, 62, 74, 112,
	408, 0, 91, 92, 73, 50, 96, 97, 34, 0,
	111, 0, 25, 0, 0, 0, 116, 24, 16, 15,
	0, 17, 0, 28, 864, 29, 0, 0, 18, 0,
	0, 0, 19, 20, 33, 44, 108, 0, 21, 31,
	0, 0, 32, 0, 0, 22, 0, 27, 89, 90,
	412, 46, 47, 48, 0, 0, 0, 0, 54, 115,
	0, 105, 101, 102, 103, 98, 99, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 104,
	100, 0, 0, 93, 94, 95, 0, 0, 0, 0,
	88, 56, 0, 0, 0, 77, 78, 23, 109, 110,
	0, 0, 0, 57, 58, 79, 66, 67, 68, 69,
	70, 71, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 0, 119, 117, 118, 107, 76, 12, 0,
	30, 0, 63, 0, 55, 0, 0, 0, 60, 59,
	61, 62, 74, 112, 408, 0, 91, 92, 73, 50,
	96, 97, 34, 0, 111, 0, 25, 0, 0, 0,
	116, 24, 16, 15, 0, 17, 0, 28, 0, 29,
	801, 0, 18, 0, 0, 0, 19, 20, 33, 44,
	108, 0, 21, 31, 0, 0, 32, 0, 0, 22,
	0, 27, 89, 90, 412, 46, 47, 48, 0, 0,
	0, 0, 54, 115, 0, 105, 101, 102, 103, 98,
	99, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 104, 100, 0, 0, 93, 94, 95,
	0, 0, 0, 0, 88, 56, 0, 0, 0, 77,
	78, 23, 109, 110, 0, 0, 0, 57, 58, 79,
	66, 67, 68, 69, 70, 71, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 119, 117, 118,
	107, 76, 12, 0, 30, 0, 63, 0, 55, 0,
	0, 0, 60, 59, 61, 62, 74, 112, 408, 0,
	91, 92, 73, 50, 96, 97, 34, 0, 111, 0,
	25, 0, 0, 0, 116, 24, 16, 15, 785, 17,
	0, 28, 0, 29, 0, 0, 18, 0, 0, 0,
	19, 20, 33, 44, 108, 0, 21, 31, 0, 0,
	32, 0, 0, 22, 0, 27, 89, 90, 412, 46,
	47, 48, 0, 0, 0, 0, 54, 115, 0, 105,
	101, 102, 103, 98, 99, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 104, 100, 0,
	0, 93, 94, 95, 0, 0, 0, 0, 88, 56,
	0, 0, 0, 77, 78, 23, 109, 110, 0, 0,
	0, 57, 58, 79, 66, 67, 68, 69, 70, 71,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	0, 119, 117, 118, 107, 76, 12, 0, 30, 0,
	63, 0, 55, 0, 0, 0, 60, 59, 61, 62,
	74, 112, 408, 0, 91, 92, 73, 50, 96, 97,
	34, 0, 111, 0, 25, 0, 0, 0, 116, 24,
	16, 15, 0, 17, 0, 28, 0, 29, 0, 0,
	18, 0, 0, 0, 19, 20, 33, 44, 108, 0,
	21, 31, 0, 0, 32, 0, 0, 22, 0, 27,
	89, 90, 412, 46, 47, 48, 0, 0, 0, 0,
	54, 115, 0, 105, 101, 102, 103, 98, 99, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	0, 104, 100, 0, 0, 93, 94, 95, 0, 0,
	0, 0, 88, 56, 0, 0, 692, 77, 78, 23,
	109, 110, 0, 0, 0, 57, 58, 79, 66, 67,
	68, 69, 70, 71, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 0, 119, 117, 118, 107, 76,
	12, 0, 30, 0, 63, 0, 55, 0, 0, 0,
	60, 59, 61, 62, 74, 112, 408, 0, 91, 92,
	73, 50, 96, 97, 34, 0, 111, 0, 25, 0,
	0, 0, 116, 24, 16, 15, 0, 17, 0, 28,
	0, 29, 0, 0, 18, 0, 0, 0, 19, 20,
	33, 44, 108, 0, 21, 31, 0, 0, 32, 0,
	0, 22, 0, 27, 89, 90, 412, 46, 47, 48,
	0, 0, 0, 0, 54, 115, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 104, 100, 0, 0, 93,
	94, 95, 0, 0, 0, 0, 88, 56, 0, 0,
	0, 77, 78, 23, 109, 110, 0, 0, 0, 57,
	58, 79, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 0, 119,
	117, 118, 107, 76, 12, 589, 30, 0, 63, 0,
	55, 0, 0, 0, 60, 59, 61, 62, 74, 112,
	408, 0, 91, 92, 73, 50, 96, 97, 34, 0,
	111, 0, 25, 0, 0, 0, 116, 24, 16, 15,
	0, 17, 0, 28, 0, 29, 0, 0, 18, 0,
	0, 0, 19, 20, 33, 44, 108, 0, 21, 31,
	0, 0, 32, 0, 0, 22, 0, 27, 89, 90,
	412, 46, 47, 48, 0, 0, 0, 0, 54, 115,
	0, 105, 101, 102, 103, 98, 99, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 104,
	100, 0, 0, 93, 94, 95, 0, 0, 0, 0,
	88, 56, 0, 0, 0, 77, 78, 23, 109, 110,
	0, 0, 0, 57, 58, 79, 66, 67, 68, 69,
	70, 71, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 0, 119, 117, 118, 107, 76, 12, 407,
	30, 0, 63, 0, 55, 0, 0, 0, 60, 59,
	61, 62, 74, 112, 408, 0, 91, 92, 73, 50,
	96, 97, 34, 0, 111, 0, 25, 0, 0, 0,
	116, 24, 16, 15, 0, 17, 0, 28, 0, 29,
	0, 0, 18, 0, 0, 0, 19, 20, 33, 44,
	108, 0, 21, 31, 0, 0, 32, 0, 0, 22,
	0, 27, 89, 90, 412, 46, 47, 48, 0, 0,
	0, 0, 54, 115, 0, 105, 101, 102, 103, 98,
	99, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 104, 100, 0, 0, 93, 94, 95,
	0, 0, 0, 0, 88, 56, 0, 0, 0, 77,
	78, 23, 109, 110, 0, 0, 0, 57, 58, 79,
	66, 67, 68, 69, 70, 71, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 119, 117, 118,
	107, 76, 12, 0, 30, 0, 63, 0, 55, 0,
	0, 0, 60, 59, 61, 62, 74, 112, 137, 138,
	148, 149, 0, 0, 128, 0, 111, 0, 0, 0,
	0, 0, 0, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 183, 184, 185, 186, 187, 175,
	176, 177, 204, 178, 179, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 195, 193, 194,
	190, 191, 0, 0, 182, 188, 189, 196, 197, 199,
	198, 200, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 203, 202, 0, 0, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 150, 151,
	152, 180, 181, 131, 132, 133, 134, 135, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 91,
	92, 73, 50, 96, 97, 34, 0, 111, 0, 25,
	0, 0, 0, 116, 24, 16, 15, 0, 17, 0,
	28, 0, 29, 0, 0, 18, 205, 0, 0, 19,
	20, 33, 225, 108, 531, 21, 31, 0, 0, 32,
	0, 0, 22, 0, 27, 89, 90, 0, 0, 112,
	0, 0, 0, 0, 0, 54, 115, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 104, 100, 0, 0,
	93, 94, 95, 0, 0, 0, 0, 88, 56, 0,
	0, 0, 77, 78, 23, 0, 0, 0, 0, 0,
	57, 58, 79, 66, 67, 68, 69, 70, 71, 72,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 117, 118, 107, 76, 12, 0, 30, 796, 63,
	0, 55, 0, 0, 0, 60, 59, 61, 62, 74,
	112, 91, 92, 73, 50, 96, 97, 34, 0, 111,
	0, 25, 0, 0, 0, 116, 24, 16, 15, 0,
	17, 0, 28, 0, 29, 0, 0, 18, 0, 0,
	0, 19, 20, 33, 225, 108, 0, 21, 31, 0,
	0, 32, 0, 0, 22, 0, 27, 89, 90, 0,
	0, 0, 0, 0, 0, 0, 0, 54, 115, 0,
	105, 101, 102, 103, 98, 99, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 0, 104, 100,
	0, 0, 93, 94, 95, 0, 0, 0, 0, 88,
	56, 0, 0, 0, 77, 78, 23, 0, 0, 0,
	0, 0, 57, 58, 79, 66, 67, 68, 69, 70,
	71, 72, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 117, 118, 107, 76, 12, 0, 30,
	860, 63, 0, 55, 0, 0, 0, 60, 59, 61,
	62, 74, 112, 91, 92, 73, 50, 96, 97, 34,
	0, 111, 0, 25, 0, 0, 0, 116, 24, 16,
	15, 0, 17, 0, 28, 0, 29, 0, 0, 18,
	0, 0, 0, 19, 20, 33, 225, 108, 0, 21,
	31, 0, 0, 32, 0, 0, 22, 0, 27, 89,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 54,
	115, 0, 105, 101, 102, 103, 98, 99, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	104, 100, 0, 0, 93, 94, 95, 0, 0, 0,
	0, 88, 56, 0, 0, 0, 77, 78, 23, 0,
	0, 0, 0, 0, 57, 58, 79, 66, 67, 68,
	69, 70, 71, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 117, 118, 107, 76, 12,
	0, 30, 702, 63, 0, 55, 0, 0, 0, 60,
	59, 61, 62, 74, 112, 91, 92, 73, 50, 96,
	97, 34, 0, 111, 0, 25, 0, 0, 0, 116,
	24, 16, 15, 0, 17, 0, 28, 0, 29, 0,
	0, 18, 0, 0, 0, 19, 20, 33, 225, 108,
	0, 21, 31, 0, 0, 32, 0, 0, 22, 0,
	27, 89, 90, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 115, 0, 105, 101, 102, 103, 98, 99,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 0,
	0, 0, 104, 100, 0, 0, 93, 94, 95, 0,
	0, 0, 0, 88, 56, 0, 0, 0, 77, 78,
	23, 0, 0, 0, 0, 0, 57, 58, 79, 66,
	67, 68, 69, 70, 71, 72, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 117, 118, 107,
	76, 12, 0, 30, 688, 63, 0, 55, 0, 0,
	0, 60, 59, 61, 62, 74, 112, 91, 92, 73,
	50, 96, 97, 34, 0, 111, 0, 25, 0, 0,
	0, 116, 24, 16, 15, 0, 17, 0, 28, 0,
	29, 0, 0, 18, 0, 0, 0, 19, 20, 33,
	225, 108, 0, 21, 31, 0, 0, 32, 0, 0,
	22, 0, 27, 89, 90, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 115, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 104, 100, 0, 0, 93, 94,
	95, 0, 0, 0, 0, 88, 56, 0, 0, 0,
	77, 78, 23, 0, 0, 0, 0, 0, 57, 58,
	79, 66, 67, 68, 69, 70, 71, 72, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 117,
	118, 107, 76, 12, 0, 30, 671, 63, 0, 55,
	0, 0, 0, 60, 59, 61, 62, 74, 112, 91,
	92, 73, 50, 96, 97, 34, 0, 111, 0, 25,
	0, 0, 0, 116, 24, 16, 15, 0, 17, 0,
	28, 0, 29, 0, 0, 18, 0, 0, 0, 19,
	20, 33, 225, 108, 0, 21, 31, 0, 0, 32,
	0, 0, 22, 0, 27, 89, 90, 0, 0, 0,
	0, 0, 0, 0, 0, 54, 115, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 104, 100, 0, 0,
	93, 94, 95, 0, 0, 0, 0, 88, 56, 0,
	0, 0, 77, 78, 23, 0, 0, 0, 0, 0,
	57, 58, 79, 66, 67, 68, 69, 70, 71, 72,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 117, 118, 107, 76, 12, 0, 30, 0, 63,
	0, 55, 0, 0, 0, 60, 59, 61, 62, 74,
	112, 137, 138, 148, 149, 0, 0, 893, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 183, 184, 185,
	186, 187, 175, 176, 177, 204, 178, 179, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 0,
	195, 193, 194, 190, 191, 0, 0, 182, 188, 189,
	196, 197, 199, 198, 200, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 203, 202,
	0, 0, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 150, 151, 152, 180, 181, 131, 132, 133, 134,
	135, 136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 138, 148, 149, 0, 205,
	893, 0, 119, 117, 118, 0, 0, 0, 912, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	183, 184, 185, 186, 187, 175, 176, 177, 204, 178,
	179, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 195, 193, 194, 190, 191, 0, 0,
	182, 188, 189, 196, 197, 199, 198, 200, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 203, 202, 0, 0, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 150, 151, 152, 180, 181, 131,
	132, 133, 134, 135, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 138, 148,
	149, 0, 205, 128, 0, 119, 117, 118, 0, 0,
	0, 884, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 183, 184, 185, 186, 187, 175, 176,
	177, 204, 178, 179, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 0, 195, 193, 194, 190,
	191, 0, 0, 182, 188, 189, 196, 197, 199, 198,
	200, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 203, 202, 0, 0, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 150, 151, 152,
	180, 181, 131, 132, 133, 134, 135, 136, 91, 92,
	73, 0, 96, 97, 231, 0, 111, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 108, 0, 0, 205, 0, 0, 0, 127,
	0, 0, 0, 125, 89, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 115, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 104, 100, 0, 325, 93,
	94, 95, 0, 0, 0, 0, 88, 56, 0, 0,
	0, 77, 78, 230, 0, 0, 0, 0, 0, 57,
	58, 79, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 92,
	73, 0, 96, 97, 231, 0, 111, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 119,
	117, 118, 107, 76, 0, 0, 0, 0, 63, 0,
	55, 225, 108, 324, 60, 59, 61, 62, 74, 112,
	0, 0, 0, 0, 89, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 115, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 104, 100, 0, 557, 93,
	94, 95, 0, 0, 0, 0, 88, 56, 0, 0,
	0, 77, 78, 230, 0, 0, 0, 0, 0, 57,
	58, 79, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 92,
	73, 0, 96, 97, 231, 0, 111, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 119,
	117, 118, 107, 76, 0, 0, 0, 0, 63, 553,
	55, 225, 108, 0, 60, 59, 61, 62, 74, 112,
	0, 0, 0, 0, 89, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 115, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 104, 100, 0, 557, 93,
	94, 95, 0, 0, 0, 0, 88, 56, 0, 0,
	0, 77, 78, 230, 0, 0, 0, 0, 0, 57,
	58, 79, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 92,
	73, 0, 96, 97, 231, 0, 111, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 119,
	117, 118, 107, 76, 0, 0, 0, 0, 63, 0,
	55, 225, 108, 0, 60, 59, 61, 62, 74, 112,
	0, 0, 0, 0, 89, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 616, 115, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 104, 100, 0, 0, 93,
	94, 95, 0, 0, 0, 0, 88, 56, 0, 0,
	0, 77, 78, 230, 0, 0, 0, 0, 0, 57,
	58, 79, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 92,
	73, 0, 96, 97, 231, 524, 111, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 119,
	117, 118, 107, 76, 0, 0, 0, 0, 63, 0,
	55, 225, 108, 615, 60, 59, 61, 62, 74, 112,
	0, 0, 0, 0, 89, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 115, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 104, 100, 0, 0, 93,
	94, 95, 0, 0, 0, 0, 88, 56, 0, 0,
	0, 77, 78, 230, 0, 0, 0, 0, 0, 57,
	58, 79, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 92,
	73, 0, 96, 97, 231, 0, 111, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 119,
	117, 118, 107, 76, 0, 0, 0, 0, 63, 0,
	55, 225, 108, 0, 60, 59, 61, 62, 74, 112,
	0, 0, 0, 0, 89, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 115, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 104, 100, 0, 0, 93,
	94, 95, 0, 0, 0, 0, 88, 56, 0, 0,
	0, 77, 78, 230, 0, 0, 0, 0, 0, 57,
	58, 79, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 92,
	73, 0, 96, 97, 231, 0, 111, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 119,
	117, 118, 107, 76, 0, 0, 0, 0, 63, 0,
	55, 225, 108, 474, 60, 59, 61, 62, 74, 112,
	0, 0, 0, 0, 89, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 115, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 104, 100, 0, 0, 93,
	94, 95, 0, 0, 0, 0, 88, 56, 0, 0,
	0, 77, 78, 230, 0, 0, 0, 0, 0, 57,
	58, 79, 66, 67, 68, 69, 70, 71, 72, 231,
	0, 111, 0, 0, 0, 0, 0, 116, 91, 92,
	73, 0, 96, 97, 231, 0, 111, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 119,
	117, 118, 107, 76, 0, 0, 0, 458, 63, 0,
	55, 225, 108, 0, 60, 59, 61, 62, 74, 112,
	115, 0, 0, 0, 89, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 115, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 104, 100, 0, 312, 93,
	94, 95, 0, 0, 0, 0, 88, 56, 0, 0,
	0, 77, 78, 230, 0, 0, 0, 0, 0, 57,
	58, 79, 66, 67, 68, 69, 70, 71, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 117, 118, 0, 0, 0,
	0, 0, 0, 330, 0, 332, 0, 0, 0, 119,
	117, 118, 107, 76, 112, 0, 0, 0, 63, 0,
	55, 0, 0, 0, 60, 59, 61, 62, 74, 112,
	137, 138, 148, 149, 0, 0, 128, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 183, 184, 185, 186,
	187, 175, 176, 177, 204, 178, 179, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 195,
	193, 194, 190, 191, 0, 0, 182, 188, 189, 196,
	197, 199, 198, 200, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 203, 202, 0,
	0, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	150, 151, 152, 180, 181, 131, 132, 133, 134, 135,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 138, 148, 149, 0, 0,
	928, 0, 0, 0, 0, 0, 0, 0, 205, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	183, 184, 185, 186, 187, 175, 176, 177, 204, 178,
	179, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 195, 193, 194, 190, 191, 0, 0,
	182, 188, 189, 196, 197, 199, 198, 200, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 203, 202, 0, 0, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 150, 151, 152, 180, 181, 766,
	767, 768, 765, 764, 763, 247, 249, 248, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 245, 246,
	257, 260, 261, 262, 263, 264, 265, 267, 269, 0,
	0, 0, 0, 0, 0, 0, 247, 249, 248, 271,
	0, 0, 0, 0, 774, 272, 251, 255, 254, 0,
	0, 0, 0, 0, 250, 0, 252, 256, 258, 259,
	266, 268, 253, 273, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	246, 257, 260, 261, 262, 263, 264, 265, 267, 269,
	0, 0, 0, 0, 0, 0, 0, 247, 249, 248,
	271, 0, 0, 732, 0, 0, 272, 251, 255, 254,
	0, 0, 0, 0, 0, 250, 0, 252, 256, 258,
	259, 266, 268, 253, 273, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 246, 257, 260, 261, 262, 263, 264, 265, 267,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	714, 247, 249, 248, 271, 0, 0, 272, 251, 255,
	254, 0, 0, 0, 0, 0, 250, 0, 252, 256,
	258, 259, 266, 268, 253, 0, 0, 0, 273, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 246, 257, 260, 261, 262,
	263, 264, 265, 267, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 712, 247, 249, 248, 271, 0,
	0, 272, 251, 255, 254, 0, 0, 0, 0, 0,
	250, 0, 252, 256, 258, 259, 266, 268, 253, 0,
	0, 0, 273, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 246,
	257, 260, 261, 262, 263, 264, 265, 267, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 703, 247,
	249, 248, 271, 0, 0, 272, 251, 255, 254, 0,
	0, 0, 0, 0, 250, 0, 252, 256, 258, 259,
	266, 268, 253, 0, 0, 0, 273, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 246, 257, 260, 261, 262, 263, 264,
	265, 267, 269, 0, 0, 0, 0, 0, 0, 0,
	247, 249, 248, 271, 0, 0, 691, 0, 0, 272,
	251, 255, 254, 0, 0, 0, 0, 0, 250, 0,
	252, 256, 258, 259, 266, 268, 253, 273, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 246, 257, 260, 261, 262, 263,
	264, 265, 267, 269, 0, 0, 0, 0, 0, 0,
	0, 247, 249, 248, 271, 0, 0, 690, 0, 0,
	272, 251, 255, 254, 0, 0, 0, 0, 0, 250,
	0, 252, 256, 258, 259, 266, 268, 253, 273, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 246, 257, 260, 261, 262,
	263, 264, 265, 267, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 656, 247, 249, 248, 271, 0,
	0, 272, 251, 255, 254, 0, 0, 0, 0, 0,
	250, 0, 252, 256, 258, 259, 266, 268, 253, 0,
	0, 0, 273, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 246,
	257, 260, 261, 262, 263, 264, 265, 267, 269, 0,
	0, 0, 0, 0, 0, 0, 247, 249, 248, 271,
	0, 0, 645, 0, 0, 272, 251, 255, 254, 0,
	0, 0, 0, 0, 250, 0, 252, 256, 258, 259,
	266, 268, 253, 273, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	246, 257, 260, 261, 262, 263, 264, 265, 267, 269,
	0, 0, 0, 0, 0, 0, 0, 247, 249, 248,
	271, 0, 0, 644, 0, 0, 272, 251, 255, 254,
	0, 0, 0, 0, 0, 250, 0, 252, 256, 258,
	259, 266, 268, 253, 273, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 246, 257, 260, 261, 262, 263, 264, 265, 267,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	627, 247, 249, 248, 271, 0, 0, 272, 251, 255,
	254, 0, 0, 0, 0, 0, 250, 0, 252, 256,
	258, 259, 266, 268, 253, 0, 0, 0, 273, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 246, 257, 260, 261, 262,
	263, 264, 265, 267, 269, 0, 0, 0, 0, 0,
	0, 0, 247, 249, 248, 271, 0, 0, 618, 0,
	0, 272, 251, 255, 254, 0, 0, 0, 0, 0,
	250, 0, 252, 256, 258, 259, 266, 268, 253, 273,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 246, 257, 260, 261,
	262, 263, 264, 265, 267, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 608, 247, 249, 248, 271,
	587, 0, 272, 251, 255, 254, 0, 0, 0, 0,
	0, 250, 0, 252, 256, 258, 259, 266, 268, 253,
	0, 0, 0, 273, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	246, 257, 260, 261, 262, 263, 264, 265, 267, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	249, 248, 271, 606, 0, 0, 272, 251, 255, 254,
	0, 0, 0, 0, 0, 250, 0, 252, 256, 258,
	259, 266, 268, 253, 0, 0, 273, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 246, 257, 260, 261, 262, 263, 264,
	265, 267, 269, 0, 0, 0, 0, 0, 0, 0,
	247, 249, 248, 271, 0, 0, 0, 0, 0, 272,
	251, 255, 254, 0, 0, 0, 0, 0, 250, 0,
	252, 256, 258, 259, 266, 268, 253, 273, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 246, 257, 260, 261, 262, 263,
	264, 265, 267, 269, 0, 0, 0, 0, 0, 0,
	0, 247, 249, 248, 271, 583, 0, 0, 0, 0,
	272, 251, 255, 254, 0, 0, 0, 0, 0, 250,
	0, 252, 256, 258, 259, 266, 268, 253, 273, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 246, 257, 260, 261, 262,
	263, 264, 265, 267, 269, 0, 0, 0, 0, 0,
	0, 0, 247, 249, 248, 271, 0, 0, 578, 0,
	0, 272, 251, 255, 254, 0, 0, 0, 0, 0,
	250, 0, 252, 256, 258, 259, 266, 268, 253, 273,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 246, 257, 260, 261,
	262, 263, 264, 265, 267, 269, 0, 0, 0, 0,
	0, 0, 0, 247, 249, 248, 271, 0, 0, 574,
	0, 0, 272, 251, 255, 254, 0, 0, 0, 0,
	0, 250, 0, 252, 256, 258, 259, 266, 268, 253,
	273, 270, 0, 0, 0, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 246, 257, 260,
	261, 262, 263, 264, 265, 267, 269, 0, 0, 0,
	0, 0, 0, 0, 247, 249, 248, 271, 0, 0,
	515, 0, 0, 272, 251, 255, 254, 0, 0, 0,
	0, 0, 250, 0, 252, 256, 258, 259, 266, 268,
	253, 273, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 246, 257,
	260, 261, 262, 263, 264, 265, 267, 269, 0, 0,
	0, 0, 0, 0, 0, 247, 249, 248, 271, 0,
	0, 0, 0, 0, 272, 251, 255, 254, 0, 0,
	0, 0, 0, 250, 0, 252, 256, 258, 259, 266,
	268, 253, 273, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 246,
	257, 260, 261, 262, 263, 264, 265, 267, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 466,
	247, 249, 248, 271, 0, 272, 251, 255, 254, 0,
	0, 0, 0, 0, 250, 0, 252, 256, 258, 259,
	266, 268, 253, 0, 0, 0, 0, 273, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 246, 257, 260, 261, 262, 263,
	264, 265, 267, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 247, 249, 248, 271, 0,
	272, 251, 255, 254, 0, 0, 0, 0, 0, 250,
	0, 252, 256, 258, 259, 266, 268, 253, 0, 0,
	0, 0, 273, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 246,
	257, 260, 261, 262, 263, 264, 265, 267, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 248, 271,
	0, 0, 0, 0, 0, 272, 251, 255, 254, 0,
	0, 0, 0, 0, 250, 0, 252, 256, 258, 259,
	266, 268, 253, 273, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	246, 257, 260, 261, 262, 263, 264, 265, 267, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	271, 0, 0, 0, 0, 0, 272, 251, 255, 254,
	0, 0, 0, 0, 0, 250, 0, 252, 256, 258,
	259, 266, 268, 253, 273, 270, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 246, 257, 260, 261, 262, 263, 264, 265, 267,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 272, 251, 255,
	254, 0, 0, 0, 0, 0, 250, 0, 252, 256,
	258, 259, 266, 268, 253, 273, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 246, 257, 260, 261, 262, 263, 264, 265,
	267, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 272, 251,
	255, 254, 0, 0, 0, 0, 0, 250, 0, 252,
	256, 258, 259, 266, 268, 253, 273, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 246, 257, 260, 261, 262, 263, 264,
	265, 267, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 272,
	251, 255, 254, 0, 0, 0, 0, 0, 250, 0,
	252, 256, 258, 259, 266, 268, 253, 273, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 246, 257, 260, 261, 262, 263,
	264, 265, 267, 269, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 255, 254, 0, 0, 0, 0, 0, 250,
	270, 252, 256, 258, 259, 266, 268, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 257, 260, 261,
	262, 263, 264, 265, 267, 269, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 255, 254, 0, 0, 0, 0,
	0, 250, 270, 252, 256, 258, 259, 266, 268, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	260, 261, 262, 263, 264, 265, 267, 269, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 255, 254, 0, 0,
	0, 0, 0, 250, 270, 252, 256, 258, 259, 266,
	268, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 260, 261, 262, 263, 264, 265, 267, 269,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 251, 255, 254,
	0, 0, 0, 0, 0, 270, 0, 252, 256, 258,
	259, 266, 268, 253, 0, 0, 0, 0, 0, 0,
	0, 270, 257, 260, 261, 262, 263, 264, 265, 267,
	269, 0, 0, 0, 0, 0, 0, 0, 257, 260,
	261, 262, 263, 264, 265, 267, 269, 0, 251, 255,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	258, 259, 266, 268, 253, 255, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 258, 259, 266, 268,
	253,
}

var yyPact = [...]int{
	-1000, -1000, 1270, -1000, -1000, -1000, -1000, 799, 262, 4913,
	505, 679, -1000, -1000, -1000, 260, 4485, 259, 258, 5854,
	5854, 5854, 159, 634, 5854, -1000, 7462, 257, 255, 251,
	-1000, 378, 5854, 711, 280, -1000, -1000, -1000, -1000, -1000,
	514, 537, 26, -1000, 36, 501, 709, 707, 706, 555,
	250, -1000, -1000, 184, 240, 5014, 5854, 5839, 5839, 5854,
	5854, 5854, 5854, 5854, -1000, -1000, 5854, 5854, 5854, 5854,
	5854, 5854, 5854, 239, 5854, -1000, 896, 5854, 5854, 5854,
	-1000, -1000, -1000, 67, -1000, 492, 487, -1000, 371, 237,
	236, 5854, 5854, 235, 5854, 5854, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 798, 856, 36, -1000,
	-1000, -1000, 155, 209, 209, 234, -1000, -1000, -1000, -1000,
	-1000, -1000, 36, 195, 290, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 347, 646, 35, 562,
	-1000, -1000, -1000, 609, -1000, -1000, 521, -1000, -1000, 23,
	-1000, -54, 3238, 5854, 622, 36, 5854, 5854, 344, 7527,
	591, -1000, 343, 342, 22, -1000, -1000, 7, -1000, -1000,
	-59, 6, -1000, 7527, -1000, 5854, 5854, 5854, 5854, 5854,
	5854, 5854, 5854, 5854, 5854, 5854, 5854, 5854, 5854, 5854,
	5854, 5854, 5854, 5854, 5854, 5854, 5854, 5854, 5854, 5854,
	5854, 638, 5734, 5854, 5839, 5854, 679, -1000, 7397, 341,
	-1000, 232, 4485, 230, 339, 278, 5614, 5854, 5854, 5854,
	5854, 5854, 5854, 5854, 5854, 5854, 5854, 5854, 5854, 5854,
	-1000, -1000, 689, -1000, 696, -1000, 517, -1000, 544, 27,
	-1000, 209, -1000, -1000, 5854, 5854, 5854, 156, 5014, 78,
	25, -1000, -1000, 7336, 5839, 5854, 224, -1000, -1000, 67,
	5854, -1000, 5014, -1000, 400, 400, 472, 400, 7275, 400,
	400, 400, 400, 400, 400, 400, -1000, 5854, 400, 372,
	662, 695, -1000, 185, 5494, 5839, 7771, 7710, 7771, 5854,
	3564, 3564, 209, -1000, 477, 270, 209, -1000, 5854, 5854,
	7527, 7527, 5854, 7527, 7527, 648, -1000, 765, 518, 662,
	223, 5854, -1000, -1000, 5134, -1000, 5014, 689, 337, -1000,
	-1000, 1106, -1000, 336, -24, 533, -1000, 646, 376, 688,
	686, -1000, 609, -1000, 679, 5854, -1000, -1000, -1000, -1000,
	-1000, 799, 222, 7214, 221, -1000, 325, 24, 7527, 7153,
	-1000, -1000, -1000, -1000, 159, -1000, 666, 5854, -1000, 5854,
	7884, 7936, 7588, 7771, 7649, 7988, 8055, 8039, 66, 66,
	66, 472, 400, 472, 472, 247, 247, 744, 744, 744,
	744, 389, 389, 389, 389, 744, -1000, 7092, 5854, 7832,
	4, -1000, -1000, 7031, -37, 3074, -1000, -1000, 5854, -1000,
	5854, -1000, -1000, 7771, 5854, 7771, 7771, 7771, 7771, 7771,
	7771, 7771, 7771, 7771, 7771, 7771, 7771, 7771, -1000, 220,
	517, 494, 564, 375, -1000, 564, 555, 77, -1000, 6968,
	75, 6904, 209, -1000, 5854, -1000, 191, -64, 5014, 5374,
	-1000, 7527, 5014, 6843, 65, -1000, 189, -1000, -1000, -1000,
	-1000, 198, 647, 6779, 74, 351, 5854, 64, 209, -1000,
	-1000, 5854, 209, -1000, -1000, -1000, -1000, 159, 5854, 5854,
	156, 159, 517, 3, -1000, 7527, 6718, 6657, -1000, -1000,
	-1000, 422, 6593, -1000, -3, -1000, 7527, 5854, 188, -1000,
	942, -1000, -1000, -1000, 370, -1000, 588, 584, -1000, -1000,
	-1000, 7527, -1000, 182, 4323, 5854, 5854, 5854, 218, -1000,
	-1000, 7527, -1000, 5854, 7832, 175, 5839, 667, 4161, -1000,
	6532, 6471, 2910, 8055, 205, 422, 494, -1000, 564, -1000,
	-1000, 369, -50, -1000, -1000, -1000, 3999, -1000, -1000, -1000,
	6407, -65, 5854, -1000, 7527, 5839, 202, 172, -1000, -1000,
	-1000, 56, -1000, -1000, 640, -1000, -1000, -1000, -1000, 5854,
	-1000, 7771, -1000, -1000, 6343, -1000, -1000, 50, 6279, -1000,
	-1000, 494, 154, 5854, -1000, -1000, 149, -4, -1000, 37,
	-1000, -1000, 536, -1000, -1000, -1000, -1000, 148, 5254, 7527,
	-1000, -1000, 521, -44, -1000, -1000, 521, -1000, 324, -1000,
	-1000, -1000, 6218, 321, 7527, -1000, 320, 316, 7832, 314,
	-1000, 146, 528, 5839, 200, 5014, -1000, -1000, -1000, 577,
	4485, 276, 313, 422, 131, -1000, 364, -50, 1294, -1000,
	564, -1000, -1000, -1000, 5854, 7771, -1000, 5014, -65, -1000,
	-1000, 6157, -1000, -1000, -1000, -1000, -1000, -1000, 274, 422,
	459, -1000, -1000, -1000, -1000, -47, -1000, 350, 584, -1000,
	-1000, 2746, 309, 5854, 421, -1000, 806, -1000, -1000, 3675,
	667, -1000, 5014, 43, 2582, -1000, 199, 361, -1000, -1000,
	-1000, 123, 567, 358, -1000, -1000, -1000, 422, 610, 564,
	645, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1130,
	-1000, 3402, 7771, 122, 349, 357, -1000, 422, -1000, 664,
	-1000, 201, 521, -1000, -1000, 306, -1000, 120, -1000, 5854,
	183, 419, 304, 785, -1000, -1000, -1000, 90, -1000, 85,
	-1000, 303, 564, -1000, 3402, 274, 274, 197, -1000, 966,
	657, 6016, 36, -29, -1000, -1000, -65, -1000, -1000, 523,
	-1000, -66, -1000, -1000, -1000, 3837, 45, -1000, -1000, -1000,
	-1000, -1000, 298, 2418, 3675, -1000, -1000, 105, -1000, 2254,
	354, 353, 180, 297, -1000, -27, -1000, -79, -28, -1000,
	-80, 6016, -1000, -1000, 4780, 181, 5854, 5854, -1000, -1000,
	-1000, -1000, 3402, -1000, 295, -1000, 84, 564, -1000, -1000,
	-1000, -40, -1000, -1000, 663, -1000, -1000, 657, -1000, 5854,
	-1000, 6016, 5854, -1000, -1000, 4647, -1000, 291, 287, 565,
	585, 468, -1000, -1000, -1000, 7771, 7527, 2090, 3402, -1000,
	299, -1000, 1926, 1762, -1000, 180, -1000, -1000, 7527, -1000,
	7527, 157, -1000, -1000, -1000, -1000, 564, 6140, 6016, 158,
	-1000, -1000, -1000, -1000, -1000, -1000, 422, -50, -1000, -1000,
	6016, -1000, -1000, 1598, 76, -1000, -1000, 274, 273, -1000,
	-1000, -1000, 1434, -1000,
}

var yyPgo = [...]int{
	0, 945, 941, 18, 11, 939, 4, 31, 13, 938,
	41, 29, 937, 936, 932, 931, 921, 27, 920, 81,
	24, 82, 912, 26, 910, 0, 86, 3, 907, 906,
	903, 37, 54, 30, 16, 34, 902, 898, 65, 897,
	59, 895, 7, 894, 892, 889, 887, 10, 55, 886,
	882, 51, 85, 120, 881, 870, 28, 869, 867, 5,
	866, 83, 44, 861, 47, 39, 860, 851, 850, 849,
	848, 84, 846, 845, 833, 8, 830, 90, 828, 827,
	825, 822, 820, 811, 806, 804, 802, 94, 9, 99,
	100, 800, 796, 791, 43, 36, 35, 2, 19, 622,
	50, 77, 789, 787, 786, 12, 781, 779, 87, 775,
	38, 42, 765, 763, 58, 762, 66, 45, 6, 692,
	23, 557, 759, 758, 40, 755, 76, 1, 15, 754,
	752, 741, 732, 49, 722, 17,
}

var yyR1 = [...]int{
	0, 134, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	126, 126, 91, 91, 89, 89, 90, 90, 10, 10,
	10, 10, 114, 114, 115, 115, 116, 133, 133, 117,
	117, 117, 117, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 119, 119, 16, 18,
	7, 7, 86, 86, 85, 85, 87, 87, 17, 17,
	20, 20, 19, 19, 19, 19, 77, 77, 127, 127,
	22, 22, 22, 22, 22, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 123,
	123, 74, 74, 30, 30, 109, 109, 31, 12, 1,
	1, 2, 2, 13, 13, 132, 132, 99, 99, 14,
	15, 110, 110, 112, 112, 111, 111, 120, 120, 120,
	120, 106, 106, 105, 105, 29, 29, 103, 103, 103,
	103, 124, 124, 124, 8, 8, 107, 107, 84, 84,
	76, 76, 92, 92, 80, 80, 27, 27, 28, 28,
	33, 33, 34, 34, 98, 98, 96, 96, 96, 97,
	97, 100, 100, 78, 78, 35, 35, 37, 37, 38,
	39, 39, 40, 40, 128, 128, 41, 41, 41, 41,
	75, 75, 102, 102, 102, 125, 125, 42, 42, 43,
	44, 44, 44, 44, 46, 46, 45, 104, 104, 130,
	130, 129, 129, 131, 131, 118, 118, 118, 118, 118,
	118, 79, 79, 47, 47, 83, 83, 88, 21, 73,
	73, 48, 23, 23, 24, 24, 50, 49, 49, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 108, 108, 135, 3,
	3, 113, 113, 81, 81, 59, 59, 60, 60, 60,
	60, 51, 51, 52, 52, 57, 57, 122, 122, 122,
	101, 101, 64, 64, 64, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 65, 65, 65, 25, 25, 26, 26, 63, 66,
	66, 66, 67, 67, 67, 68, 68, 68, 68, 68,
	68, 32, 32, 32, 53, 53, 53, 69, 69, 70,
	70, 70, 70, 70, 70, 61, 61, 61, 62, 62,
	62, 56, 94, 94, 55, 55, 93, 93, 93, 93,
	93, 93, 93, 121, 121, 121, 121, 71, 71, 71,
	71, 71, 71, 71, 72, 72, 72, 72, 54, 54,
	54, 54, 54, 54, 54, 82, 82, 95,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 3, 4, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 5,
	4, 3, 4, 3, 4, 3, 1, 1, 6, 6,
	0, 1, 3, 1, 3, 1, 3, 1, 1, 2,
	1, 3, 1, 3, 1, 2, 3, 1, 2, 0,
	1, 1, 1, 2, 4, 3, 1, 1, 5, 7,
	9, 5, 3, 3, 3, 3, 3, 3, 1, 2,
	6, 7, 9, 5, 1, 6, 3, 3, 2, 0,
	9, 1, 3, 0, 4, 1, 3, 1, 11, 0,
	1, 0, 1, 9, 8, 1, 2, 1, 1, 6,
	7, 0, 2, 0, 2, 0, 2, 1, 2, 4,
	3, 1, 4, 1, 4, 1, 4, 3, 4, 4,
	5, 0, 5, 4, 1, 1, 1, 4, 5, 6,
	1, 3, 6, 7, 3, 6, 1, 0, 1, 3,
	4, 6, 0, 1, 1, 2, 1, 1, 1, 0,
	2, 2, 4, 1, 3, 1, 2, 3, 1, 1,
	3, 1, 1, 3, 2, 0, 4, 4, 3, 10,
	1, 3, 1, 2, 3, 1, 2, 2, 2, 3,
	3, 3, 4, 3, 1, 1, 3, 1, 3, 1,
	1, 0, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 4, 3, 1, 4, 4, 3,
	1, 1, 0, 1, 3, 1, 8, 3, 2, 6,
	5, 3, 4, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 5, 4, 3, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 3, 2,
	1, 2, 4, 2, 1, 2, 11, 9, 0, 0,
	1, 0, 4, 3, 1, 1, 2, 2, 4, 4,
	2, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	0, 1, 4, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 3, 3, 1,
	1, 1, 3, 3, 1, 1, 0, 1, 1, 1,
	3, 1, 1, 3, 1, 1, 4, 4, 4, 4,
	1, 1, 1, 3, 1, 4, 2, 3, 3, 1,
	4, 4, 3, 3, 3, 1, 3, 1, 1, 3,
	1, 1, 0, 1, 3, 1, 3, 1, 4, 2,
	2, 6, 4, 2, 2, 1, 2, 1, 4, 3,
	3, 3, 6, 3, 1, 1, 2, 1, 5, 4,
	2, 2, 4, 2, 2, 1, 3, 1,
}

var yyChk = [...]int{
	-1000, -134, -126, -9, 2, -11, -117, -133, 52, 80,
	45, 39, 150, -76, -80, 21, 20, 23, 30, 34,
	35, 40, 47, 99, 19, 14, -25, 49, 25, 27,
	152, 41, 44, 36, 10, -12, -13, -14, -15, -116,
	-84, -92, -32, -36, 37, -132, 53, 54, 55, 143,
	7, -68, -69, -66, 60, 156, 93, 105, 106, 161,
	160, 162, 163, 154, -49, -54, 108, 109, 110, 111,
	112, 113, 114, 6, 164, -58, 149, 97, 98, 107,
	-108, -99, -53, -65, -60, -51, -63, -64, 92, 50,
	51, 4, 5, 85, 86, 87, 8, 9, 67, 68,
	82, 64, 65, 66, 81, 63, 75, 148, 38, 100,
	101, 12, 165, -10, -67, 61, 18, 146, 147, 145,
	-116, -117, 37, 154, -91, 150, -6, 146, 10, -5,
	-4, 99, 100, 101, 102, 103, 104, 4, 5, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 6, 7,
	94, 95, 96, 19, 20, 21, 22, 23, 24, 25,
	26, 27, 28, 29, 41, 42, 43, 44, 45, 46,
	47, 48, 49, 50, 51, 35, 36, 37, 39, 40,
	97, 98, 60, 30, 31, 32, 33, 34, 61, 62,
	56, 57, 80, 54, 55, 53, 63, 64, 66, 65,
	67, 68, 82, 81, 38, 142, -18, -119, -87, -90,
	37, 39, -19, -89, 147, -20, 83, 10, 146, -77,
	-21, 10, -127, 154, -11, 37, 154, 154, -26, -25,
	99, 10, -26, -26, -37, -38, -53, -39, -108, -40,
	12, -73, -48, -25, 152, 131, 132, 88, 90, 89,
	167, 159, 169, 175, 161, 160, 170, 133, 171, 172,
	134, 135, 136, 137, 138, 139, 173, 140, 174, 141,
	116, 91, 158, 115, 154, 154, 154, 150, -25, 10,
	153, 94, 95, 94, 96, 95, 168, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	105, 106, -3, 159, 53, -99, 10, 10, 10, -115,
	-114, -51, 99, -10, 154, 156, 150, 58, 154, -56,
	-55, -94, -93, -25, 159, 84, 60, -25, -32, -65,
	154, -64, 156, -32, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -57, 154, -25, -122,
	17, -121, -71, 12, 77, 78, -25, -25, -25, 156,
	79, 79, -52, -50, -51, -70, 53, -53, 154, 154,
	-25, -25, 154, -25, -25, 17, 76, -121, -121, 17,
	-3, 150, -53, -100, 154, -100, 154, -3, 155, 152,
	150, -126, 152, -16, -87, -90, 152, 166, 83, 29,
	29, -20, -89, 152, 166, 168, -22, 151, 2, -11,
	-117, -133, 52, -25, 21, -3, -23, -24, -25, -25,
	152, 152, 152, 152, 166, 152, 166, 168, 152, 166,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -52, -25, 153, -25,
	-109, -31, -32, -25, -77, -127, 152, 152, 154, -11,
	154, 152, 153, -25, 159, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, 10, -135,
	10, -110, 56, -135, -112, 56, 166, -7, -100, -25,
	-26, -25, -62, 10, 150, -53, -56, 157, 166, 59,
	-32, -25, 154, -25, -56, 155, -26, 149, -71, -71,
	17, 156, 58, -25, 11, -32, 59, -26, -61, -6,
	-53, 150, -61, -6, -53, -101, -100, 79, 156, 150,
	58, 79, -101, -82, -95, -25, -25, -25, 76, 76,
	148, 154, -25, 155, -78, -35, -25, 84, -56, 152,
	-126, 151, 152, 152, 83, -19, -90, 150, 10, 10,
	-21, -25, -117, 154, 155, 154, 152, 166, 155, -38,
	-40, -25, -48, 153, -25, -7, 166, 29, 155, 151,
	-25, -25, -127, -25, -135, 154, -110, -111, 57, -10,
	150, -135, -75, -10, -114, 157, 155, 157, 151, -100,
	-25, 155, 168, -94, -25, 159, 60, -56, 155, 157,
	155, -72, 10, 13, 160, 12, 10, 151, 151, 156,
	151, -25, 157, -100, -25, -100, -53, -26, -25, -62,
	-53, -110, -7, 166, 155, 155, -27, -28, -33, -34,
	-98, -96, 158, 61, 62, -10, 151, -7, 166, -25,
	155, 151, 150, -86, -17, -20, -119, -135, 155, -107,
	-11, 153, -25, -23, -25, -103, 150, 153, -25, 155,
	-31, -120, -32, 159, 60, 156, -29, -11, 153, -123,
	155, 155, 96, 154, -27, -111, -135, -75, -128, 150,
	166, -11, 153, 151, 168, -25, -32, 154, 155, 157,
	13, -25, 151, 157, 151, -111, 155, -95, 155, 166,
	-1, 159, -96, 155, -35, -85, -20, -7, 166, -20,
	152, -127, 155, 152, -124, 152, -124, 152, 152, 155,
	59, -32, 154, -56, -127, -30, 42, 43, -11, 153,
	152, -27, 155, -135, 150, 151, -41, -130, -129, 45,
	-131, 48, -118, 104, 103, 102, 99, 100, 101, -128,
	-10, -127, -25, -56, 157, -135, -97, 153, -33, -2,
	84, -7, 166, 151, -17, 22, 152, -23, 151, 32,
	33, -124, 31, -124, -105, -11, 153, -120, -32, -56,
	157, 28, 154, 150, -127, 155, -113, 45, 150, -128,
	-34, 39, 37, -75, -118, 151, 155, 151, 150, -135,
	-98, 12, 151, -20, 152, 155, -25, -8, 153, 152,
	151, 152, 31, -127, 155, 155, 152, -74, -10, -127,
	-97, -97, 154, -128, 151, -79, -47, 12, -83, -88,
	-6, -3, -102, 152, 150, -128, 59, 168, -106, -11,
	153, -8, -127, 152, 26, -105, 12, 167, 151, 150,
	150, -81, -59, 12, 159, 151, 152, 166, -135, 168,
	152, 166, 168, -6, 151, -125, -42, -43, -44, -45,
	-46, -10, -6, 10, 151, -25, -25, -127, -127, 152,
	155, -10, -127, -127, 155, 166, 12, -47, -25, -88,
	-25, -135, 151, -42, 152, 152, 46, 29, 79, 24,
	150, 151, 151, -59, -135, -135, 154, -75, 10, -4,
	-118, -6, 152, -127, -27, -6, 151, 155, -97, -104,
	152, 150, -127, 151,
}

var yyDef = [...]int{
	81, -2, -2, 80, 103, 104, 105, 0, 0, 0,
	0, 0, 139, 146, 147, 0, 0, 0, 0, 436,
	436, 436, 0, 401, 0, 158, 0, 0, 0, 0,
	164, 0, 0, 0, 88, 99, 100, 101, 102, 97,
	220, 0, -2, 435, 389, 0, 0, 0, 0, 0,
	0, -2, 452, 438, 0, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 367, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 377, 407, 0, 380, 0,
	384, 185, 445, 430, 450, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 0, 0, 389, 187,
	188, 454, 0, -2, 0, 0, 414, 89, 90, 91,
	98, 106, 389, 0, 0, 81, 82, 83, 78, 79,
	71, 72, 73, 74, 75, 76, 77, 2, 3, 4,
	5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
	35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
	45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 132,
	116, 117, 127, 86, 87, 134, 0, 84, 85, 0,
	137, 0, 0, 0, 0, 389, 302, 0, 0, 437,
	401, 88, 0, 0, 0, 248, 249, 0, 385, 251,
	252, 0, 300, 301, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 329, 388, 390, 0, 186, 191, 388, 193, 120,
	94, 92, 401, 402, 0, 436, 0, 0, 472, 0,
	471, 475, 473, 477, 0, 0, 0, 313, -2, 0,
	0, -2, 472, -2, 348, 349, 350, 351, 0, 368,
	369, 370, 371, 372, 373, 374, 375, 436, 376, 0,
	408, 409, 485, 487, 0, 0, 379, 381, 383, 436,
	0, 0, 410, 308, 403, 404, 410, 459, 0, 0,
	500, 501, 0, 503, 504, 0, 426, 0, 0, 0,
	0, 0, 456, 397, 0, 400, 472, 0, 0, 108,
	81, 0, 111, 0, 0, 132, 113, 0, 0, 0,
	0, 135, 130, 115, 0, 0, 138, 145, 140, 141,
	142, 0, 0, 0, 0, 388, 0, 303, 305, 0,
	152, 153, 154, 155, 0, 156, 0, 0, 157, 0,
	331, 332, 333, 334, 335, 336, 337, 338, 339, 340,
	341, 342, 343, 344, 345, 346, 347, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 361, 0, 0, 366,
	120, 175, -2, 0, 0, 0, 166, 167, 0, 221,
	0, 224, 139, 311, 0, 314, 315, 316, 317, 318,
	319, 320, 321, 322, 323, 324, 325, 326, 388, 0,
	191, 195, 0, 0, 388, 0, 121, 0, 93, 0,
	0, 0, 453, 468, 0, 470, 0, 413, 472, 0,
	-2, 480, 472, 0, 0, -2, 0, 378, 486, 483,
	484, 0, 0, 0, 0, 439, 0, 0, 0, -2,
	-2, 0, 0, -2, -2, 307, 411, 0, 436, 0,
	0, 0, 191, 120, 505, 507, 0, 0, 425, 428,
	427, -2, 0, 241, 120, 243, 245, 0, 0, 107,
	0, 110, 112, 114, 0, 126, 132, 0, 133, 131,
	136, 388, 143, 0, 0, 0, 302, 0, 0, 247,
	250, 253, 299, 0, 365, 0, 121, 0, 0, 169,
	0, 0, 0, 312, 0, -2, 195, 388, 0, 192,
	255, 0, 194, 260, 95, 96, 0, 446, 448, 449,
	0, 0, 0, 474, 476, 0, 0, 0, -2, 413,
	406, 0, 494, 495, 0, 497, 489, 490, 491, 0,
	493, 382, 447, 398, 0, 399, 463, 0, 0, 462,
	464, 195, 0, 121, 499, 502, 0, 226, 228, 179,
	233, 234, 0, 236, 237, 238, 455, 0, 121, 246,
	412, 109, 0, 120, 123, 128, 0, 298, 0, 148,
	216, 139, 0, 0, 304, 151, 211, 211, 364, 0,
	176, 0, -2, 0, 0, 472, 163, 205, 139, 173,
	0, 0, 0, -2, 0, 388, 0, 196, 281, 255,
	0, 218, 139, 469, 0, 310, -2, 472, 482, 488,
	496, 0, 466, 460, 461, 388, 498, 506, 239, 232,
	181, 180, 235, 242, 244, 120, 125, 0, 121, 129,
	144, 0, 0, 302, 0, 211, 0, 211, 160, 0,
	0, -2, 472, 0, 0, 165, 0, 0, 219, 139,
	225, 0, 391, 0, 255, 189, 254, 232, 0, 0,
	-2, 280, 283, 285, 286, 287, 288, 289, 290, 281,
	261, -2, 309, 0, 0, 0, 388, 0, 229, 0,
	182, 0, 121, 119, 122, 0, 149, 0, 207, 0,
	0, 0, 0, 0, 161, 203, 139, 0, -2, 0,
	-2, 0, 0, 139, -2, 239, 239, 0, 255, 281,
	0, 0, 389, 0, 284, 190, 481, 492, 255, 0,
	240, 230, 118, 124, 217, 0, 0, 139, 214, 215,
	208, 209, 0, 0, 0, 199, 206, 0, 171, 0,
	0, 0, 0, 281, 184, 0, 292, 388, 0, 296,
	0, 0, 258, 262, 0, 281, 0, 0, 150, 201,
	139, 139, -2, 210, 0, 162, 0, 0, 174, 139,
	139, 0, 394, 395, 0, 183, 256, 0, 293, 0,
	257, 0, 0, 388, 263, 0, 265, 0, 0, 275,
	0, 0, 274, -2, 306, 387, 231, 0, -2, 204,
	0, 172, 0, 0, 392, 0, 396, 291, 388, 295,
	388, 0, 264, 266, 267, 268, 0, 0, 0, 0,
	139, 178, 386, 393, 294, 297, -2, 269, 270, 271,
	273, 276, 202, 0, 0, 272, 170, 239, 0, 259,
	277, 139, 0, 278,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 162, 148, 3, 165, 172, 159, 3,
	154, 155, 170, 161, 166, 160, 175, 171, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 153, 152,
	173, 168, 174, 158, 164, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 156, 3, 157, 169, 3, 149, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 150, 167, 151, 163,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147,
}

var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:292
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:334
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:340
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:347
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.NamePart{
						Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						StringTkn: yyDollar[1].token,
						Value:     yyDollar[1].token.Value,
					},
				},
			}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:359
		{
			name := yylex.(*Parser).parseNameToken(yyDollar[1].token)

			yyVAL.node = &ParserSeparatedList{
				Items:         name.Parts,
				SeparatorTkns: name.SeparatorTkns,
			}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:371
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.NamePart{
						Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						StringTkn: yyDollar[1].token,
						Value:     yyDollar[1].token.Value,
					},
				},
			}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:383
		{
			yyVAL.node = yylex.(*Parser).parseNameRelativeToken(yyDollar[1].token)
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:390
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:394
		{
			yyVAL.node = yylex.(*Parser).parseNameFullyQualifiedToken(yyDollar[1].token)
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:401
		{
			yyVAL.node = &ast.Name{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Parts: []ast.Vertex{
					&ast.NamePart{
						Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						StringTkn: yyDollar[1].token,
						Value:     yyDollar[1].token.Value,
					},
				},
			}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:414
		{
			yyVAL.node = yylex.(*Parser).parseNameToken(yyDollar[1].token)
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:418
		{
			yyVAL.node = yylex.(*Parser).parseNameFullyQualifiedToken(yyDollar[1].token)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:422
		{
			yyVAL.node = yylex.(*Parser).parseNameRelativeToken(yyDollar[1].token)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:429
		{
			yyVAL.node = &ast.Attribute{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Name:     yyDollar[1].node,
			}
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:436
		{
			yyVAL.node = &ast.Attribute{
				Position:            yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Name:                yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:450
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:456
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:466
		{
			if yyDollar[3].token != nil {
				yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[3].token)
			}

			yyVAL.node = &ast.AttributeGroup{
				Position:          yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenAttributeTkn:  yyDollar[1].token,
				Attrs:             yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:     yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseAttributeTkn: yyDollar[4].token,
			}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:483
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:487
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:494
		{
			yyVAL.node = yyDollar[1].node
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:498
		{
			yyVAL.node = yyDollar[1].node
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:502
		{
			yyVAL.node = yyDollar[1].node
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:506
		{
			yyVAL.node = yyDollar[1].node
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:513
		{
			// error
			yyVAL.node = nil
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:518
		{
			yyVAL.node = yyDollar[1].node
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:522
		{
			yyVAL.node = yyDollar[1].node
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:526
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.StmtFunction:
				n.AttrGroups = yyDollar[1].list
			case *ast.StmtClass:
				n.AttrGroups = yyDollar[1].list
			case *ast.StmtTrait:
				n.AttrGroups = yyDollar[1].list
			case *ast.StmtInterface:
				n.AttrGroups = yyDollar[1].list
			}

			yyVAL.node = yyDollar[2].node
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:537
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:547
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 109:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:560
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Stmts:                yyDollar[4].list,
				CloseCurlyBracketTkn: yyDollar[5].token,
			}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:575
		{
			yyVAL.node = &ast.StmtNamespace{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				NsTkn:                yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:585
		{
			use := yyDollar[2].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)
			use.UseTkn = yyDollar[1].token
			use.SemiColonTkn = yyDollar[3].token

			yyVAL.node = yyDollar[2].node
		}
	case 112:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:595
		{
			use := yyDollar[3].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			use.UseTkn = yyDollar[1].token
			use.Type = yyDollar[2].node
			use.SemiColonTkn = yyDollar[4].token

			yyVAL.node = yyDollar[3].node
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:606
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				UseTkn:        yyDollar[1].token,
				Uses:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:616
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				UseTkn:        yyDollar[1].token,
				Type:          yyDollar[2].node,
				Uses:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:627
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:640
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:648
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:659
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			groupUseList := &ast.StmtGroupUseList{
				Position:             yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Prefix:               yyDollar[1].node,
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}

			if n, ok := groupUseList.Prefix.(*ast.NameFullyQualified); ok {
				groupUseList.LeadingNsSeparatorTkn = n.NsSeparatorTkn

				prefix := &ast.Name{
					Position:      n.Position,
					Parts:         n.Parts,
					SeparatorTkns: n.SeparatorTkns,
				}
				prefix.Position.StartPos++

				groupUseList.Prefix = prefix
			}

			yyVAL.node = groupUseList
		}
	case 119:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:693
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			groupUseList := &ast.StmtGroupUseList{
				Position:             yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Prefix:               yyDollar[1].node,
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}

			if n, ok := groupUseList.Prefix.(*ast.NameFullyQualified); ok {
				groupUseList.LeadingNsSeparatorTkn = n.NsSeparatorTkn

				prefix := &ast.Name{
					Position:      n.Position,
					Parts:         n.Parts,
					SeparatorTkns: n.SeparatorTkns,
				}
				prefix.Position.StartPos++

				groupUseList.Prefix = prefix
			}

			yyVAL.node = groupUseList
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:727
		{
			yyVAL.token = nil
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:731
		{
			yyVAL.token = yyDollar[1].token
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:738
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:745
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:754
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:761
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:770
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:777
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:786
		{
			yyVAL.node = yyDollar[1].node
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:790
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yyDollar[1].node
			decl.Position = yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:801
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Use:      yyDollar[1].node,
			}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:808
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Use:      yyDollar[1].node,
				AsTkn:    yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:824
		{
			use := &ast.StmtUse{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Use:      yyDollar[1].node,
			}

			if n, ok := use.Use.(*ast.NameFullyQualified); ok {
				use.NsSeparatorTkn = n.NsSeparatorTkn

				name := &ast.Name{
					Position:      n.Position,
					Parts:         n.Parts,
					SeparatorTkns: n.SeparatorTkns,
				}
				name.Position.StartPos++

				use.Use = name
			}

			yyVAL.node = use
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:846
		{
			use := &ast.StmtUse{
				Position: yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Use:      yyDollar[1].node,
				AsTkn:    yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}

			if n, ok := use.Use.(*ast.NameFullyQualified); ok {
				use.NsSeparatorTkn = n.NsSeparatorTkn

				name := &ast.Name{
					Position:      n.Position,
					Parts:         n.Parts,
					SeparatorTkns: n.SeparatorTkns,
				}
				name.Position.StartPos++

				use.Use = name
			}

			yyVAL.node = use
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:877
		{
			yyVAL.node = yyDollar[1].node
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:881
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.NsSeparatorTkn = yyDollar[1].token
			decl.Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:892
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:899
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:908
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:914
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:921
		{
			// error
			yyVAL.node = nil
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:926
		{
			yyVAL.node = yyDollar[1].node
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:930
		{
			yyVAL.node = yyDollar[1].node
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:934
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.StmtFunction:
				n.AttrGroups = yyDollar[1].list
			case *ast.StmtClass:
				n.AttrGroups = yyDollar[1].list
			case *ast.StmtTrait:
				n.AttrGroups = yyDollar[1].list
			case *ast.StmtInterface:
				n.AttrGroups = yyDollar[1].list
			}

			yyVAL.node = yyDollar[2].node
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:945
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:957
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:966
		{
			yyVAL.node = yyDollar[1].node
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:970
		{
			yyVAL.node = yyDollar[1].node
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:974
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
// line internal/php8/php8.y:984
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 150:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php8/php8.y:997
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:1014
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1024
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1033
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1042
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1051
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1059
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1067
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1075
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1083
		{
			yyVAL.node = &ast.StmtExpression{
				Position:     yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Expr:         yyDollar[1].node,
				SemiColonTkn: yyDollar[2].token,
			}
		}
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:1091
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 161:
		yyDollar = yyS[yypt-7 : yypt+1]
// line internal/php8/php8.y:1104
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 162:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php8/php8.y:1123
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:1144
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1155
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 165:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:1162
		{
			pos := yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list)
			if yyDollar[6].node != nil {
				pos = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.StmtTry{
				Position:             pos,
				TryTkn:               yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
				Catches:              yyDollar[5].list,
				Finally:              yyDollar[6].node,
			}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1179
		{
			yyVAL.node = &ast.StmtThrow{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ThrowTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1188
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1201
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1215
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 170:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php8/php8.y:1219
		{
			catch := yyDollar[4].node.(*ast.StmtCatch)
			catch.CatchTkn = yyDollar[2].token
			catch.OpenParenthesisTkn = yyDollar[3].token
			catch.Var = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[5].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[5].token),
					IdentifierTkn: yyDollar[5].token,
					Value:         yyDollar[5].token.Value,
				},
			}
			catch.CloseParenthesisTkn = yyDollar[6].token
			catch.OpenCurlyBracketTkn = yyDollar[7].token
			catch.Stmts = yyDollar[8].list
			catch.CloseCurlyBracketTkn = yyDollar[9].token
			catch.Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[2].token, yyDollar[9].token)

			yyVAL.list = append(yyDollar[1].list, catch)
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1242
		{
			yyVAL.node = &ast.StmtCatch{
				Types: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1248
		{
			yyDollar[1].node.(*ast.StmtCatch).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtCatch).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.StmtCatch).Types = append(yyDollar[1].node.(*ast.StmtCatch).Types, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1258
		{
			yyVAL.node = nil
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1262
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1275
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1281
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1291
		{
			yyVAL.node = yyDollar[1].node
		}
	case 178:
		yyDollar = yyS[yypt-11 : yypt+1]
// line internal/php8/php8.y:1298
		{
			yyVAL.node = &ast.StmtFunction{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[11].token),
				FunctionTkn:  yyDollar[1].token,
				AmpersandTkn: yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenParenthesisTkn:   yyDollar[5].token,
				Params:               yyDollar[6].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[6].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[7].token,
				ColonTkn:             yyDollar[8].node.(*ReturnType).ColonTkn,
				ReturnType:           yyDollar[8].node.(*ReturnType).Type,
				OpenCurlyBracketTkn:  yyDollar[9].token,
				Stmts:                yyDollar[10].list,
				CloseCurlyBracketTkn: yyDollar[11].token,
			}
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1323
		{
			yyVAL.token = nil
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1334
		{
			yyVAL.token = nil
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1338
		{
			yyVAL.token = yyDollar[1].token
		}
	case 183:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php8/php8.y:1345
		{
			class := &ast.StmtClass{
				Position:  yylex.(*Parser).builder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[9].token),
				Modifiers: yyDollar[1].list,
				ClassTkn:  yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[7].token,
				Stmts:                yyDollar[8].list,
				CloseCurlyBracketTkn: yyDollar[9].token,
			}

			if yyDollar[4].node != nil {
				class.ExtendsTkn = yyDollar[4].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[4].node.(*ast.StmtClass).Extends
			}

			if yyDollar[5].node != nil {
				class.ImplementsTkn = yyDollar[5].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[5].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[5].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 184:
		yyDollar = yyS[yypt-8 : yypt+1]
// line internal/php8/php8.y:1374
		{
			class := &ast.StmtClass{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1405
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1409
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1416
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1424
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 189:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:1435
		{
			yyVAL.node = &ast.StmtTrait{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token),
				TraitTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Stmts:                yyDollar[5].list,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 190:
		yyDollar = yyS[yypt-7 : yypt+1]
// line internal/php8/php8.y:1453
		{
			iface := &ast.StmtInterface{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				InterfaceTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[5].token,
				Stmts:                yyDollar[6].list,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}

			if yyDollar[3].node != nil {
				iface.ExtendsTkn = yyDollar[3].node.(*ast.StmtInterface).ExtendsTkn
				iface.Extends = yyDollar[3].node.(*ast.StmtInterface).Extends
				iface.ExtendsSeparatorTkns = yyDollar[3].node.(*ast.StmtInterface).ExtendsSeparatorTkns
			}

			yyVAL.node = iface
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1479
		{
			yyVAL.node = nil
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1483
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1494
		{
			yyVAL.node = nil
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1498
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1510
		{
			yyVAL.node = nil
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1514
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1526
		{
			yyVAL.node = yyDollar[1].node
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1530
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1538
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1549
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1562
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1569
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1585
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1592
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1608
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1615
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1631
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1640
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1650
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:1660
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1674
		{
			yyVAL.list = nil
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:1678
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1688
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1700
		{
			yyVAL.token = yyDollar[1].token
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1704
		{
			yyVAL.token = yyDollar[1].token
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1711
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1718
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 218:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:1734
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:1745
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1763
		{
			yyVAL.node = yyDollar[1].node
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1767
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:1782
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 223:
		yyDollar = yyS[yypt-7 : yypt+1]
// line internal/php8/php8.y:1797
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1817
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 225:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:1825
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1845
		{
			yyVAL.node = yyDollar[1].node
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1849
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1856
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:1862
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:1872
		{
			pos := yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.NewTokensPosition(yyDollar[2].token, yyDollar[4].token)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
			}
		}
	case 231:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:1898
		{
			pos := yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[3].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
				EqualTkn:     yyDollar[5].token,
				DefaultValue: yyDollar[6].node,
			}
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1929
		{
			yyVAL.node = nil
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1933
		{
			yyVAL.node = yyDollar[1].node
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1940
		{
			yyVAL.node = yyDollar[1].node
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1944
		{
			yyVAL.node = &ast.Nullable{
				Position:    yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				QuestionTkn: yyDollar[1].token,
				Expr:        yyDollar[2].node,
			}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1955
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1963
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:1971
		{
			yyVAL.node = yyDollar[1].node
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:1978
		{
			yyVAL.node = &ReturnType{}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1982
		{
			yyVAL.node = &ReturnType{
				ColonTkn: yyDollar[1].token,
				Type:     yyDollar[2].node,
			}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:1992
		{
			yyVAL.node = &ArgumentList{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2000
		{
			argumentList := yyDollar[2].node.(*ArgumentList)
			argumentList.Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			if yyDollar[3].token != nil {
				argumentList.SeparatorTkns = append(argumentList.SeparatorTkns, yyDollar[3].token)
			}
			argumentList.CloseParenthesisTkn = yyDollar[4].token

			yyVAL.node = argumentList
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2015
		{
			yyVAL.node = &ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2021
		{
			yyDollar[1].node.(*ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ArgumentList).Arguments = append(yyDollar[1].node.(*ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2031
		{
			yyVAL.node = &ast.Argument{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Expr:     yyDollar[1].node,
			}
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2038
		{
			yyVAL.node = &ast.Argument{
				Position:    yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				VariadicTkn: yyDollar[1].token,
				Expr:        yyDollar[2].node,
			}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2049
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2056
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2065
		{
			yyVAL.node = yyDollar[1].node
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2072
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2079
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2088
		{

			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2103
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2122
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:2126
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2133
		{
			yyVAL.node = &ast.StmtPropertyList{
				Position:      yylex.(*Parser).builder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				Type:          yyDollar[2].node,
				Props:         yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2144
		{
			yyVAL.node = &ast.StmtClassConstList{
				Position:      yylex.(*Parser).builder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				ConstTkn:      yyDollar[2].token,
				Consts:        yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2155
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 259:
		yyDollar = yyS[yypt-10 : yypt+1]
// line internal/php8/php8.y:2175
		{
			pos := yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[2].token, yyDollar[10].node)
			if yyDollar[1].list != nil {
				pos = yylex.(*Parser).builder.NewNodeListNodePosition(yyDollar[1].list, yyDollar[10].node)
			}

			yyVAL.node = &ast.StmtClassMethod{
				Position:     pos,
				Modifiers:    yyDollar[1].list,
				FunctionTkn:  yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
				OpenParenthesisTkn:  yyDollar[6].token,
				Params:              yyDollar[7].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[8].token,
				ColonTkn:            yyDollar[9].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[9].node.(*ReturnType).Type,
				Stmt:                yyDollar[10].node,
			}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2204
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2210
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2220
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2227
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2235
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2247
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2251
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2258
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2264
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2273
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2288
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2303
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2318
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2334
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2348
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2359
		{
			yyVAL.node = yyDollar[1].node
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2366
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2382
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2389
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2401
		{
			yyVAL.list = yyDollar[1].list
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2405
		{
			yyVAL.list = []ast.Vertex{
				&ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:2418
		{
			yyVAL.list = nil
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2422
		{
			yyVAL.list = yyDollar[1].list
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2429
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2433
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2440
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2448
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2456
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2464
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2472
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2480
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2491
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2498
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2507
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2522
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2541
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2548
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2557
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2573
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2589
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2596
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2605
		{
			yyVAL.node = yyDollar[1].node
		}
	case 302:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:2612
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2616
		{
			yyVAL.node = yyDollar[1].node
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2623
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:2630
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 306:
		yyDollar = yyS[yypt-8 : yypt+1]
// line internal/php8/php8.y:2639
		{
			if yyDollar[2].node == nil {
				yyDollar[2].node = &ArgumentList{}
			}

			class := &ast.StmtClass{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn:             yyDollar[1].token,
				OpenParenthesisTkn:   yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                 yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:        yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2673
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2693
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 309:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:2704
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:2720
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2735
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:2744
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2754
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2762
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2771
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2780
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2789
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2798
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2807
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2816
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2825
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2834
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2843
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2852
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2861
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2870
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2879
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2887
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2895
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:2903
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2911
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2920
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2929
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2938
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2947
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2956
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2965
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2974
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2983
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:2992
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3001
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3010
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3019
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3028
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3037
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3046
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3055
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3064
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3072
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3080
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3088
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3096
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3105
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3114
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3123
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3132
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3141
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3150
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3159
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3168
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3177
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3186
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3195
		{
			yyVAL.node = yyDollar[1].node
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:3199
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3210
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3220
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3229
		{
			yyVAL.node = yyDollar[1].node
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3233
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3241
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3249
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3257
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3265
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3273
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3281
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3289
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3306
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3314
		{
			yyVAL.node = yyDollar[1].node
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3318
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3327
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3335
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3342
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3350
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3360
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3368
		{
			yyVAL.node = yyDollar[1].node
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3372
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 386:
		yyDollar = yyS[yypt-11 : yypt+1]
// line internal/php8/php8.y:3388
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 387:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php8/php8.y:3407
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:3430
		{
			yyVAL.token = nil
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3434
		{
			yyVAL.token = yyDollar[1].token
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:3441
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3445
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3458
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3465
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3474
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3488
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3506
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3517
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3538
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3559
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3573
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3581
		{
			yyVAL.node = yyDollar[1].node
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3588
		{
			yyVAL.node = yyDollar[1].node
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3592
		{
			yyVAL.node = yyDollar[1].node
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:3599
		{
			yyVAL.node = nil
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3603
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:3615
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3619
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3629
		{
			yyVAL.list = yyDollar[1].list
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:3636
		{
			yyVAL.node = nil
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3640
		{
			yyVAL.node = yyDollar[1].node
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3647
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3658
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3668
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3679
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3687
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3695
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3703
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3711
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3719
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3727
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3735
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3743
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3751
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3759
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:3774
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3782
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3791
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3800
		{
			yyVAL.node = yyDollar[1].node
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3804
		{
			yyVAL.node = yyDollar[1].node
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3811
		{
			yyVAL.node = &ast.ExprConstFetch{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Const:    yyDollar[1].node,
			}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3818
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3831
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3847
		{
			yyVAL.node = yyDollar[1].node
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3851
		{
			yyVAL.node = yyDollar[1].node
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:3858
		{
			yyVAL.node = nil
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3862
		{
			yyVAL.node = yyDollar[1].node
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3869
		{
			yyVAL.node = yyDollar[1].node
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3876
		{
			yyVAL.node = yyDollar[1].node
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3880
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3889
		{
			yyVAL.node = yyDollar[1].node
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3896
		{
			yyVAL.node = yyDollar[1].node
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3900
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3909
		{
			yyVAL.node = yyDollar[1].node
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3916
		{
			yyVAL.node = yyDollar[1].node
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3920
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3930
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3940
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:3950
		{
			methodCall := &ast.ExprMethodCall{
				Position:            yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:                 yyDollar[1].node,
				ObjectOperatorTkn:   yyDollar[2].token,
				Method:              yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				methodCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				methodCall.Method = brackets.Child
				methodCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = methodCall
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3971
		{
			yyVAL.node = yyDollar[1].node
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3978
		{
			yyVAL.node = yyDollar[1].node
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:3982
		{
			yyVAL.node = yyDollar[1].node
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:3986
		{
			propertyFetch := &ast.ExprPropertyFetch{
				Position:          yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:               yyDollar[1].node,
				ObjectOperatorTkn: yyDollar[2].token,
				Prop:              yyDollar[3].node,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				propertyFetch.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				propertyFetch.Prop = brackets.Child
				propertyFetch.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = propertyFetch
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4006
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:4017
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4027
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4038
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4047
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4059
		{
			yyVAL.node = yyDollar[1].node
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:4063
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:4073
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4083
		{
			propertyFetch := &ast.ExprPropertyFetch{
				Position:          yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:               yyDollar[1].node,
				ObjectOperatorTkn: yyDollar[2].token,
				Prop:              yyDollar[3].node,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				propertyFetch.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				propertyFetch.Prop = brackets.Child
				propertyFetch.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = propertyFetch
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4100
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4109
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4121
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4129
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4138
		{
			yyVAL.node = yyDollar[1].node
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4145
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4153
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4162
		{
			yyVAL.node = yyDollar[1].node
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4169
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php8/php8.y:4183
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4187
		{
			yyVAL.node = yyDollar[1].node
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4194
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4201
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4210
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4219
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:4226
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4236
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4244
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 481:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:4252
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:4268
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4285
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4289
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4300
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4304
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4318
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:4329
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4346
		{
			yyVAL.node = &ast.ExprPropertyFetch{
				Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				ObjectOperatorTkn: yyDollar[2].token,
				Prop: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4366
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4375
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 492:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php8/php8.y:4388
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4404
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4416
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4424
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4441
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4465
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php8/php8.y:4479
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:4494
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4504
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4512
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php8/php8.y:4520
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4530
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php8/php8.y:4538
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4549
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php8/php8.y:4555
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php8/php8.y:4565
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
